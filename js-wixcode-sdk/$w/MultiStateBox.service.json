{ "name": "MultiStateBox",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.PlayableMixin",
      "$w.ClickableMixin",
      "$w.ContainableMixin" ],
  "labels": [],
  "location":
    { "filename": "MultiStateBox.es6",
      "lineno": 62 },
  "docs":
    { "summary": "MultiStateBoxes are containers for States. A MultiStateBox can show one State at a time.",
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentState",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.State",
        "locations":
          [ { "filename": "MultiStateBox.es6",
              "lineno": 124 } ],
        "docs":
          { "summary": "Gets the multistatebox's current state.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "states",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.State" ] },
        "locations":
          [ { "filename": "MultiStateBox.es6",
              "lineno": 198 } ],
        "docs":
          { "summary": "Gets a list of all the states contained in the multistatebox.",
            "description":
              [ "Note that the state indices in a multistatebox are zero-based, even though",
                " they are numbered starting from 1 in the Editor." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "changeState",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "stateReference",
              "type":
                [ "string",
                  "$w.State" ],
              "doc": "The state to move to. Either the id of the state or a [`State`](#w.State.html) from the MultiStateBox." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "$w.State" ] },
            "doc": "Fulfilled - The state that the multistatebox changed to." },
        "locations":
          [ { "filename": "MultiStateBox.es6",
              "lineno": 148 } ],
        "docs":
          { "summary": "Change the multistatebox's current state to a specific state or state id.",
            "description":
              [ "The `changeState()` function returns a Promise that is resolved when",
                " the multistatebox finishes moving from the current state to the state",
                " referred to by `stateReference`.",
                "",
                " You can retrieve [`State`]($w.State.html) objects to pass to the",
                " `stateReference` parameter from your multistatebox using the",
                " [`currentState`](#currentState) or [`states`](#states) properties.",
                "",
                " If passing a string, note that state ids in a multistatebox are accessible through the",
                " id of a state." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onChange",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventHandler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the multistatebox moves to a new state." } ],
        "ret":
          { "type": "$w.MultiStateBox",
            "doc": "The multistatebox on which the event is now registered." },
        "locations":
          [ { "filename": "MultiStateBox.es6",
              "lineno": 79 } ],
        "docs":
          { "summary": "Adds an event handler that runs when the multistatebox moves to a new state.",
            "description":
              [ "A multistatebox moves to a new state programatically via code or in an app.",
                "",
                " The event handler set by the `onChange` function is run immediately before",
                " the multistatebox moves to the new state. Therefore, reading the multistatebox's",
                " [`currentState`](#currentState) within",
                " the event handler function returns the state that the multistatebox",
                " is moving away from." ],
            "links":
              [ "[changeState( )](#changeState)" ],
            "examples": [],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "**Deprecation note:** The $w parameter of event handlers is being deprecated. To get\n a scoped selector for working with elements in repeater items, use the [$w.at()]($w.html#at) function\n and pass it the context property of the event parameter: `$item = $w.at(event.context)`. To learn more, see\n <a href=\"https://www.wix.com/code/home/forum/wix-tips-and-updates/removal-of-the-w-parameter-from-event-handlers\" target=\"_blank\">here</a>." ],
            "eventType": "change" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }