{ "name": "MultiStateBox",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.ClickableMixin",
      "$w.ContainableMixin" ],
  "labels": [],
  "location":
    { "filename": "MultiStateBox.es6",
      "lineno": 62 },
  "docs":
    { "summary": "Multi-state boxes are containers for states.",
      "description":
        [ "A <a href=\"https://support.wix.com/en/article/corvid-about-multi-state-boxes\" target=\"_blank\">multi-state box</a> contains",
          "multiple states, each with different content. A multi-state box displays one state at a time." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentState",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.State",
        "locations":
          [ { "filename": "MultiStateBox.es6",
              "lineno": 117 } ],
        "docs":
          { "summary": "Gets the multi-state box's current state.",
            "links": [],
            "examples":
              [ { "title": "Get the current state and its ID",
                  "body":
                    [ "let state = $w(\"#myStatebox\").currentState;",
                      "",
                      "let stateId = state.id; // \"state1\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "states",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.State" ] },
        "locations":
          [ { "filename": "MultiStateBox.es6",
              "lineno": 197 } ],
        "docs":
          { "summary": "Gets a list of all the states contained in the multi-state box.",
            "links": [],
            "examples":
              [ { "title": "Get a multi-state box's states",
                  "body":
                    [ "let myStates = $w(\"#myStatebox\").states;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "changeState",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "stateReference",
              "type":
                [ "string",
                  "$w.State" ],
              "doc": "The state to move to. Either the id of the state or a [`State`](#w.State.html) from the multi-state box." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "$w.State" ] },
            "doc": "Fulfilled - The state that the multistatebox changed to.\nRejected - If no argument was provided or the argument is not a string or an existing state." },
        "locations":
          [ { "filename": "MultiStateBox.es6",
              "lineno": 142 } ],
        "docs":
          { "summary": "Change the multi-state box's current state to a specific state.",
            "description":
              [ "The `changeState()` function returns a Promise that is resolved when",
                " the multi-state box finishes moving from the current state to the state",
                " referred to by `stateReference`. `stateReference` can be a state object or",
                " a state [`id`]($w.State.html#id).",
                "",
                " You can retrieve [`State`]($w.State.html) objects to pass to the",
                " `stateReference` parameter from your multi-state box using the",
                " [`currentState`](#currentState) or [`states`](#states) properties." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onChange",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventHandler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the multi-state box moves to a new state." } ],
        "ret":
          { "type": "$w.MultiStateBox",
            "doc": "The multi-state box on which the event is now registered." },
        "locations":
          [ { "filename": "MultiStateBox.es6",
              "lineno": 81 } ],
        "docs":
          { "summary": "Adds an event handler that runs when the multi-state box moves to a new state.",
            "description":
              [ "A multi-state box moves to a new state programmatically (with code)." ],
            "links":
              [ "[changeState( )](#changeState)" ],
            "examples":
              [ { "title": "Get the ID of the state to which the multi-state box moved",
                  "body":
                    [ "$w(\"#myStatebox\").onChange( (event) => {",
                      "  let currentState = event.target.currentState.id; // \"state2\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "change" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }