{ "name": "ValueMixin",
  "memberOf": "$w",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "ValueMixin.es6",
      "lineno": 6 },
  "docs":
    { "description":
        [ "Adds the value property to elements." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "value",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "filename": "ValueMixin.es6",
              "lineno": 56 },
            { "filename": "ValueMixin.es6",
              "lineno": 89 } ],
        "docs":
          { "summary": "Sets or gets an element's value.",
            "description":
              [ "To reset the form element's value, set the `value` property to `null` or",
                " `undefined`." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's value",
                  "body":
                    [ "let myValue = $w(\"#myElement\").value; // \"42\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's value",
                  "body":
                    [ "$w(\"#myElement\").value = 42;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "Changing an element's `value` in code does not trigger an `onChange` event.\n\n If an element is connected to a dataset, setting the element's `value`\n in code does not set the value of the connected field in the dataset.\n That means if you use the dataset to perform a submit, the value changed\n in code is not reflected in the submitted item.\n\n To submit the new value using a dataset, set the field's value using the\n [`setFieldValue()`](wix-dataset.html#setFieldValue) function before\n performing the submit." ] } } ],
  "operations":
    [ { "name": "onChange",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the element's value changes." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element on which the event is now registered." },
        "locations":
          [ { "filename": "ValueMixin.es6",
              "lineno": 12 } ],
        "docs":
          { "summary": "Adds an event handler that runs when an input element's value\n is changed.",
            "description":
              [ "An element receives a `change` event when a user changes the value",
                " in an input element.",
                "",
                " A `change` event is not triggered when you change an element's value using",
                " the element's [`value`](#value) property." ],
            "links": [],
            "examples":
              [ { "title": "Get the value of the element that was changed",
                  "body":
                    [ "$w(\"#myElement\").onChange( (event) => {",
                      "  let newValue = event.target.value;  // \"new value\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "**Deprecation note:** The $w parameter of event handlers is being deprecated. To\n get a scoped selector, use the $w.at() function and pass it the context property\n of the event parameter: $item = $w.at(event.context). To learn more, see\n <a href=\"https://www.wix.com/code/home/forum/wix-tips-and-updates/removal-of-the-w-parameter-from-event-handlers\" target=\"_blank\">here</a>." ],
            "eventType": "change" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }