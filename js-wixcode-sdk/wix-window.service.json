{ "name": "wix-window",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "window.es6",
      "lineno": 13 },
  "docs":
    { "summary": "The wix-window module contains functionality that pertains to the\n current browser window.",
      "description":
        [ "To use the window module, import `wixWindow` from the `wix-window` module:",
          "",
          "   ``` javascript",
          "   import wixWindow from 'wix-window';",
          "   ```",
          "",
          " The APIs in `wix-window` can only be used in front-end code." ],
      "links": [],
      "examples": [] },
  "srcDocs":
    { "summary": "The wix-window module contains functionality that pertains to the\n current browser window.",
      "description":
        [ "To use the window module, import `wixWindow` from the `wix-window` module:",
          "",
          "   ``` javascript",
          "   import wixWindow from 'wix-window';",
          "   ```",
          "",
          " The APIs in `wix-window` can only be used in front-end code." ],
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "formFactor",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 248 } ],
        "docs":
          { "summary": "Gets what kind of device is being used to view the page.",
            "description":
              [ "The `formFactor` property gets either:",
                "",
                " + `\"Desktop\"` - When viewed in a desktop browser.",
                " + `\"Mobile\"`  - When viewed in a mobile browser." ],
            "links": [],
            "examples":
              [ { "title": "Get a device's form factor",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let formFactor = wixWindow.formFactor;  // \"Mobile\"" ] } ] },
        "srcDocs":
          { "summary": "Gets what kind of device is being used to view the page.",
            "description":
              [ "The `formFactor` property gets one of:",
                "",
                " + `\"Desktop\"` - When viewed in a desktop browser.",
                " + `\"Mobile\"`  - When viewed in a mobile browser.",
                " + `\"Tablet\"`  - When viewed in a tablet browser." ],
            "links": [],
            "examples":
              [ { "title": "Get a device's form factor",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let formFactor = wixWindow.formFactor;  // \"Mobile\"" ] } ] },
        "extra":
          {  } },
      { "name": "locale",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 270 } ],
        "docs":
          { "summary": "Gets the locale of the current environment.",
            "description":
              [ "A locale, also known as an IETF language tag, is an abbreviated code",
                " that defines the user's language, country, and other aspects of the user",
                " interface such as number format and date format.",
                "",
                " Some common locales include:",
                " + `\"en\"` - English",
                " + `\"es\"` - Spanish",
                " + `\"de\"` - German",
                " + `\"ja\"` - Japanese",
                " + `\"fr\"` - French",
                " + `\"it\"` - Italian" ],
            "links": [],
            "examples":
              [ { "title": "Get an environment's locale",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let locale = wixWindow.locale;  // \"en\"" ] } ] },
        "srcDocs":
          { "summary": "Gets the locale of the current environment.",
            "description":
              [ "A locale, also known as an IETF language tag, is an abbreviated code",
                " that defines the user's language, country, and other aspects of the user",
                " interface such as number format and date format.",
                "",
                " Some common locales include:",
                " + `\"en\"` - English",
                " + `\"es\"` - Spanish",
                " + `\"de\"` - German",
                " + `\"ja\"` - Japanese",
                " + `\"fr\"` - French",
                " + `\"it\"` - Italian" ],
            "links": [],
            "examples":
              [ { "title": "Get an environment's locale",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let locale = wixWindow.locale;  // \"en\"" ] } ] },
        "extra":
          {  } },
      { "name": "referrer",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 1065 } ],
        "docs":
          { "summary": "Gets the HTTP referrer header field.",
            "description":
              [ "The `referrer` is the address of the previous web page that the user was",
                " on before arriving at the current page, typically by clicking a link." ],
            "links": [],
            "examples":
              [ { "title": "Get the referrer information",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let referrer = wixWindow.referrer;  // \"http://somesite.com\"" ] } ] },
        "srcDocs":
          { "summary": "Gets the HTTP referrer header field.",
            "description":
              [ "The `referrer` is the address of the previous web page that the user was",
                " on before arriving at the current page, typically by clicking a link." ],
            "links": [],
            "examples":
              [ { "title": "Get the referrer information",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let referrer = wixWindow.referrer;  // \"http://somesite.com\"" ] },
                { "title": "Get the previous page within a Wix site",
                  "body":
                    [ "// In Site tab",
                      "",
                      "import {session} from 'wix-storage';",
                      "import wixLocation from 'wix-location';",
                      "",
                      "let previousPageURL;",
                      "",
                      "$w.onReady(function () {",
                      "  previousPageURL = session.getItem(\"page\");",
                      "  session.setItem(\"page\", wixLocation.url);",
                      "});" ] } ] },
        "extra":
          { "notes":
              [ "When visitors move from page to page within your site, the `referrer` property\n does not contain the address of the page the visitor came from. This is because\n Wix sites are built as <a href=\"https://en.wikipedia.org/wiki/Single-page_application\" target=\"_blank\">single page applications</a>.\n To get the previous page a visitor was visiting within your site, you can\n use [`wix-storage`](wix-storage.html) to store the visitor's current page\n and retrieve the visitor's previous page." ] } },
      { "name": "viewMode",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 228 } ],
        "docs":
          { "summary": "Gets which mode the site is currently being viewed in.",
            "description":
              [ "The `viewMode` property gets either:",
                "",
                " + `\"Preview\"` - When previewing the site using the **Preview** button in the Editor.",
                " + `\"Site\"` - When viewing the published site." ],
            "links": [],
            "examples":
              [ { "title": "Get a window's view mode",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let viewMode = wixWindow.viewMode;  // \"Site\"" ] } ] },
        "srcDocs":
          { "summary": "Gets which mode the site is currently being viewed in.",
            "description":
              [ "The `viewMode` property gets either:",
                "",
                " + `\"Preview\"` - When previewing the site using the **Preview** button in the Editor.",
                " + `\"Site\"` - When viewing the published site." ],
            "links": [],
            "examples":
              [ { "title": "Get a window's view mode",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let viewMode = wixWindow.viewMode;  // \"Site\"" ] } ] },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "getBoundingRect",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-window.WindowSizeInfo" ] },
            "doc": "undefined. on fulfilled - An object containing information about the window's size, the document's size, and the current scroll position.",
            "srcDoc": "on fulfilled - An object containing information about the window's size, the document's size, and the current scroll position." },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 340 } ],
        "docs":
          { "summary": "Returns information about the window.",
            "description":
              [ "The `getBoundingRect()` function returns a Promise that resolves to an object",
                " containing information about the current window's size, the document's size,",
                " and the current scroll position." ],
            "links": [],
            "examples":
              [ { "title": "Get information about the window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getBoundingRect()",
                      "  .then( (windowSizeInfo) => {",
                      "    let windowHeight = windowSizeInfo.window.height;      // 565",
                      "    let windowWidth = windowSizeInfo.window.width;        // 1269",
                      "    let documentHeight = windowSizeInfo.document.height;  // 780",
                      "    let documentWidth = windowSizeInfo.document.width;    // 1269",
                      "    let scrollX = windowSizeInfo.scroll.x;                // 0",
                      "    let scrollY = windowSizeInfo.scroll.y;                // 120",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "Returns information about the window.",
            "description":
              [ "The `getBoundingRect()` function returns a Promise that resolves to an object",
                " containing information about the current window's size, the document's size,",
                " and the current scroll position." ],
            "links": [],
            "examples":
              [ { "title": "Get information about the window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getBoundingRect()",
                      "  .then( (windowSizeInfo) => {",
                      "    let windowHeight = windowSizeInfo.window.height;      // 565",
                      "    let windowWidth = windowSizeInfo.window.width;        // 1269",
                      "    let documentHeight = windowSizeInfo.document.height;  // 780",
                      "    let documentWidth = windowSizeInfo.document.width;    // 1269",
                      "    let scrollX = windowSizeInfo.scroll.x;                // 0",
                      "    let scrollY = windowSizeInfo.scroll.y;                // 120",
                      "  } );" ] } ] },
        "extra":
          {  } },
      { "name": "getCurrentGeolocation",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "undefined. on fulfilled - The coordinates and timestamp of the current location.. on rejected - The user blocked the geolocation popup.",
            "srcDoc": "on fulfilled - The coordinates and timestamp of the current location.. on rejected - The user blocked the geolocation popup." },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 486 } ],
        "docs":
          { "summary": "Returns the current geolocation of the user.",
            "description":
              [ "The `getCurrentGeolocation()` function returns a Promise that resolves to an",
                " object containing the current geolocation of the user.",
                "",
                " The object contains the following key:value pairs:",
                " + `\"timestamp\"` - The geolocation timestamp representing the date and time at which the location was retrieved.",
                " + `\"coords\"` - An object that defines the location.",
                "   + `\"latitude\"` - The position's latitude in decimal degrees.",
                "   + `\"longitude\"` - The position's longitude in decimal degrees.",
                "   + `\"altitude\"` - The position's altitude in metres, relative to sea level. This value may be null if the browser cannot provide the data.",
                "   + `\"accuracy\"` - The accuracy in meters of the latitude and longitude properties.",
                "   + `\"altitudeAccuracy\"` - The accuracy in meters of the altitude property. This value may be null.",
                "   + `\"heading\"` - The direction in degrees in which the device is traveling. It indicates how far off from heading true north the device is. If `speed` is `0`, the heading is `NaN`. This value may be null if the browser cannot provide the data.",
                "   + `\"speed\"` - The velocity in meters per second of the device. This value may be null if the browser cannot provide the data." ],
            "links": [],
            "examples":
              [ { "title": "Get the geolocation data",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getCurrentGeolocation()",
                      "  .then( (obj) => {",
                      "    let timestamp = obj.timestamp;                  // 1495027186984",
                      "    let latitude = obj.coords.latitude;             // 32.0971036",
                      "    let longitude = obj.coords.longitude;           // 34.774391099999995",
                      "    let altitude = obj.coords.altitude;             // null",
                      "    let accuracy = obj.coords.accuracy;             // 29",
                      "    let altAccuracy = obj.coords.altitudeAccuracy;  // null",
                      "    let heading = obj.coords.heading;               // null",
                      "    let speed = obj.coords.speed;                   // null",
                      "  } )",
                      "  .catch( (error) => {",
                      "    let errorMsg = error;",
                      "  });" ] } ] },
        "srcDocs":
          { "summary": "Returns the current geolocation of the user.",
            "description":
              [ "The `getCurrentGeolocation()` function returns a Promise that resolves to an",
                " object containing the current geolocation of the user.",
                "",
                " The object contains the following key:value pairs:",
                " + `\"timestamp\"` - The geolocation timestamp representing the date and time at which the location was retrieved.",
                " + `\"coords\"` - An object that defines the location.",
                "   + `\"latitude\"` - The position's latitude in decimal degrees.",
                "   + `\"longitude\"` - The position's longitude in decimal degrees.",
                "   + `\"altitude\"` - The position's altitude in metres, relative to sea level. This value may be null if the browser cannot provide the data.",
                "   + `\"accuracy\"` - The accuracy in meters of the latitude and longitude properties.",
                "   + `\"altitudeAccuracy\"` - The accuracy in meters of the altitude property. This value may be null.",
                "   + `\"heading\"` - The direction in degrees in which the device is traveling. It indicates how far off from heading true north the device is. If `speed` is `0`, the heading is `NaN`. This value may be null if the browser cannot provide the data.",
                "   + `\"speed\"` - The velocity in meters per second of the device. This value may be null if the browser cannot provide the data." ],
            "links": [],
            "examples":
              [ { "title": "Get the geolocation data",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getCurrentGeolocation()",
                      "  .then( (obj) => {",
                      "    let timestamp = obj.timestamp;                  // 1495027186984",
                      "    let latitude = obj.coords.latitude;             // 32.0971036",
                      "    let longitude = obj.coords.longitude;           // 34.774391099999995",
                      "    let altitude = obj.coords.altitude;             // null",
                      "    let accuracy = obj.coords.accuracy;             // 29",
                      "    let altAccuracy = obj.coords.altitudeAccuracy;  // null",
                      "    let heading = obj.coords.heading;               // null",
                      "    let speed = obj.coords.speed;                   // null",
                      "  } )",
                      "  .catch( (error) => {",
                      "    let errorMsg = error;",
                      "  });" ] } ] },
        "extra":
          { "notes":
              [ "The `getCurrentGeolocation()` function has the following limitiations:\n + On Chrome, the function only works on HTTPS sites.\n + On Chrome, Firefox, and Safari, the function only works if the user\n   approves a popup." ] } },
      { "name": "getRouterData",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "Object",
            "doc": "The data returned by the router.",
            "srcDoc": "The data returned by the router." },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 463 } ],
        "docs":
          { "summary": "Returns the data that a router passed to the page in its response.",
            "description":
              [ "When you create a router and define its functionality in its [router()](wix-router.html#router)",
                " function, you can choose to send data along with the router's [response](wix-router.WixRouterResponse.html).",
                " That data is retrieved in the code of the page that was routed to using the",
                " `getRouterData()` function.",
                "",
                " If you call the `getRouterData()` function from a non-router page or a router",
                " page that wasn't sent any data, the function returns `null`." ],
            "links":
              [ "[router( )](wix-router.html#router)",
                "[WixRouterResponse](wix-router.WixRouterResponse.html)" ],
            "examples":
              [ { "title": "Get the data passed by a router",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let routerData = wixWindow.getRouterData();" ] } ] },
        "srcDocs":
          { "summary": "Returns the data that a router passed to the page in its response.",
            "description":
              [ "When you create a router and define its functionality in its [router()](wix-router.html#router)",
                " function, you can choose to send data along with the router's [response](wix-router.WixRouterResponse.html).",
                " That data is retrieved in the code of the page that was routed to using the",
                " `getRouterData()` function.",
                "",
                " If you call the `getRouterData()` function from a non-router page or a router",
                " page that wasn't sent any data, the function returns `null`." ],
            "links":
              [ "[router( )](wix-router.html#router)",
                "[WixRouterResponse](wix-router.WixRouterResponse.html)" ],
            "examples":
              [ { "title": "Get the data passed by a router",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let routerData = wixWindow.getRouterData();" ] } ] },
        "extra":
          {  } },
      { "name": "openLightbox",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "name",
              "type": "string",
              "doc": "The name of the lightbox to open.",
              "srcDoc": "The name of the lightbox to open." },
            { "name": "data",
              "type": "Object",
              "doc": "The data to pass to the lightbox.",
              "srcDoc": "The data to pass to the lightbox.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "undefined. on fulfilled - The returned data from the lightbox.. on rejected - The error that caused the rejection.",
            "srcDoc": "on fulfilled - The returned data from the lightbox.. on rejected - The error that caused the rejection." },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 530 } ],
        "docs":
          { "summary": "Opens a lightbox and optionally passes it the given data.",
            "description":
              [ "The `openLightbox()` function returns a Promise which is resolved when the",
                " lightbox closes. If the lightbox is closed programmatically using its",
                " [`close()`](wix-window.lightbox.html#close) function, and the",
                " [`close()`](wix-window.lightbox.html#close) function was invoked",
                " with a data parameter, then the Promise resolves to that data object.",
                "",
                " If you send a data object to the lightbox, use the [`getContext()`](#getContext)",
                " function in the lightbox's code to access the received data." ],
            "links": [],
            "examples":
              [ { "title": "Open a lightbox",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\");" ] },
                { "title": "Open a lightbox and send it data",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\", dataObj);" ] },
                { "title": "Open a lightbox and receive data when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\")",
                      "  .then( (data) => {",
                      "    let receivedData = data;",
                      "  } );" ] },
                { "title": "Open a lightbox, send it data, and receive data back when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\", dataObj)",
                      "  .then( (data) => {",
                      "    let receivedData = data;",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "Opens a lightbox and optionally passes it the given data.",
            "description":
              [ "The `openLightbox()` function returns a Promise which is resolved when the",
                " lightbox closes. If the lightbox is closed programmatically using its",
                " [`close()`](wix-window.lightbox.html#close) function, and the",
                " [`close()`](wix-window.lightbox.html#close) function was invoked",
                " with a data parameter, then the Promise resolves to that data object.",
                "",
                " If you send a data object to the lightbox, use the [`getContext()`](#getContext)",
                " function in the lightbox's code to access the received data." ],
            "links":
              [ "[openModal( )](#openModal)" ],
            "examples":
              [ { "title": "Open a lightbox",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\");" ] },
                { "title": "Open a lightbox and send it data",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\", dataObj);" ] },
                { "title": "Open a lightbox and receive data when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\")",
                      "  .then( (data) => {",
                      "    let receivedData = data;",
                      "  } );" ] },
                { "title": "Open a lightbox, send it data, and receive data back when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\", dataObj)",
                      "  .then( (data) => {",
                      "    let receivedData = data;",
                      "  } );" ] } ] },
        "extra":
          { "notes":
              [ "Use the name of the lightbox and not the lightbox's ID when calling\n `openLightbox()`." ] } },
      { "name": "openModal",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "url",
              "type": "string",
              "doc": "The URL of the page to show in the modal window.",
              "srcDoc": "The URL of the page to show in the modal window." },
            { "name": "options",
              "type": "wix-window.OpenModalOptions",
              "doc": "The options used for the modal window.",
              "srcDoc": "The options used for the modal window." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "on fulfilled - When the modal window is closed.. on rejected - The error that caused the rejection.",
            "srcDoc": "on fulfilled - When the modal window is closed.. on rejected - The error that caused the rejection." },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 846 } ],
        "docs":
          { "summary": "Opens a modal window that displays the specified web page.",
            "description":
              [ "A modal window displays the page specified by the `url` property over",
                " your current page. Unlike a [lightbox](wix-window.lightbox.html), which",
                " is open using the [`openLightbox()`](#openLightbox) function, the window",
                " opened by `openModal()` is not part of your site structure.",
                "",
                " Only one modal window can be open at any given time. Therefore, opening",
                " a modal window closes an already open modal window if there is one." ],
            "links":
              [ "[openLightbox( )](#openLightbox)" ],
            "examples":
              [ { "title": "Open a modal window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "  \"width\": 750,",
                      "  \"height\": 500",
                      "} );" ] },
                { "title": "Open a modal window and log a message when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "    \"width\": 750,",
                      "    \"height\": 500",
                      "  } )",
                      "  .then( () => {",
                      "    console.log(\"Modal closed.\");",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "Opens a modal window that displays the specified web page.",
            "description":
              [ "A modal window displays the page specified by the `url` property over",
                " your current page. Unlike a [lightbox](wix-window.lightbox.html), which",
                " is open using the [`openLightbox()`](#openLightbox) function, the window",
                " opened by `openModal()` is not part of your site structure.",
                "",
                " Only one modal window can be open at any given time. Therefore, opening",
                " a modal window closes an already open modal window if there is one." ],
            "links":
              [ "[openLightbox( )](#openLightbox)" ],
            "examples":
              [ { "title": "Open a modal window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "  \"width\": 750,",
                      "  \"height\": 500",
                      "} );" ] },
                { "title": "Open a modal window and log a message when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "    \"width\": 750,",
                      "    \"height\": 500",
                      "  } )",
                      "  .then( () => {",
                      "    console.log(\"Modal closed.\");",
                      "  } );" ] } ] },
        "extra":
          { "notes":
              [ "The specified `url` must be an HTTPS URL. To use an HTTP URL, [turn off\n SSL for your site](https://support.wix.com/en/article/turning-ssl-on-or-off-for-your-site)." ] } },
      { "name": "postMessage",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "message",
              "type": "Object",
              "doc": "The message to send.",
              "srcDoc": "The message to send." },
            { "name": "target",
              "type": "string",
              "doc": "The target to send the message to. Must be `\"parent\"` or omitted. Defaults to `\"parent\"`.",
              "srcDoc": "The target to send the message to. Must be `\"parent\"` or omitted. Defaults to `\"parent\"`.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "on fulfilled - The data returned from the modal window.. on rejected - The error that caused the rejection.",
            "srcDoc": "on fulfilled - The data returned from the modal window.. on rejected - The error that caused the rejection." },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 909 } ],
        "docs":
          { "summary": "Sends a message to the page's parent.",
            "description":
              [ "If a page is embedded within another site, using an [HtmlComponent]($w.HtmlComponent.html)",
                " on a Wix site or an [iframe](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe)",
                " on a non-Wix site, you can use the `postMessage()` function to send a",
                " message from the inner site to the outer site.",
                "",
                " When the parent site is a Wix site, use the [`onMessage()`]($w.HtmlComponent.html#onMessage)",
                " function to receive the message on the parent page.",
                "",
                " When the parent site is a non-Wix site, use the page's `window.onmessage`",
                " event handler to read the `data` property of the received `MessageEvent`",
                " to receive the message on the parent page." ],
            "links": [],
            "examples":
              [ { "title": "Send a message to a Wix parent site",
                  "body":
                    [ "/* * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the inner site to post a message *",
                      " * * * * * * * * * * * * * * * * * * * * * * */",
                      "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.postMessage(dataObj);",
                      "",
                      "/* * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the outer site to receive a message  *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      " *",
                      " * $w(\"#myHtmlComponent\").onMessage( (event, $x) => {",
                      " *   let message = event.data;",
                      " * } );",
                      " */" ] },
                { "title": "Send a message to a non-Wix parent site",
                  "body":
                    [ "/* * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the inner site to post a message *",
                      " * * * * * * * * * * * * * * * * * * * * * * */",
                      "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.postMessage(dataObj);",
                      "",
                      "/* * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the outer site to receive a message  *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      " *",
                      " * <script>",
                      " *   window.onmessage = (event) => {",
                      " *     let message = event.data;",
                      " *   }",
                      " * </script>",
                      " */" ] } ] },
        "srcDocs":
          { "summary": "Sends a message to the page's parent.",
            "description":
              [ "If a page is embedded within another site, using an [HtmlComponent]($w.HtmlComponent.html)",
                " on a Wix site or an [iframe](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe)",
                " on a non-Wix site, you can use the `postMessage()` function to send a",
                " message from the inner site to the outer site.",
                "",
                " When the parent site is a Wix site, use the [`onMessage()`]($w.HtmlComponent.html#onMessage)",
                " function to receive the message on the parent page.",
                "",
                " When the parent site is a non-Wix site, use the page's `window.onmessage`",
                " event handler to read the `data` property of the received `MessageEvent`",
                " to receive the message on the parent page." ],
            "links": [],
            "examples":
              [ { "title": "Send a message to a Wix parent site",
                  "body":
                    [ "/* * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the inner site to post a message *",
                      " * * * * * * * * * * * * * * * * * * * * * * */",
                      "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.postMessage(dataObj);",
                      "",
                      "/* * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the outer site to receive a message  *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      " *",
                      " * $w(\"#myHtmlComponent\").onMessage( (event, $x) => {",
                      " *   let message = event.data;",
                      " * } );",
                      " */" ] },
                { "title": "Send a message to a non-Wix parent site",
                  "body":
                    [ "/* * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the inner site to post a message *",
                      " * * * * * * * * * * * * * * * * * * * * * * */",
                      "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.postMessage(dataObj);",
                      "",
                      "/* * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the outer site to receive a message  *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      " *",
                      " * <script>",
                      " *   window.addEventListener(\"message\", event => {",
                      " *    let message = event.data;",
                      " *   } );",
                      " * </script>",
                      " */" ] } ] },
        "extra":
          {  } },
      { "name": "scrollBy",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "x",
              "type": "number",
              "doc": "The horizontal offset, in pixels, to scroll by.",
              "srcDoc": "The horizontal offset, in pixels, to scroll by." },
            { "name": "y",
              "type": "number",
              "doc": "The vertical offset, in pixels, to scroll by.",
              "srcDoc": "The vertical offset, in pixels, to scroll by." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "undefined. on fulfilled - When the scroll is complete.",
            "srcDoc": "on fulfilled - When the scroll is complete." },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 417 } ],
        "docs":
          { "summary": "Scrolls the page by a given number of pixels.",
            "description":
              [ "The `scrollBy()` function returns a Promise that resolves when the current",
                " page has been scrolled by the given number of pixels,",
                "",
                " The `x` and `y` parameters determine the number of horizontal and vertical",
                " pixels to scroll the current page. Negative numbers scroll up or to the",
                " left and positive numbers scroll down or to the right." ],
            "links": [],
            "examples":
              [ { "title": "Scroll the page by a given number of pixels",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollBy(100, 500);" ] },
                { "title": "Scroll the page by a given number of pixels and log message when done",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollBy(100, 500)",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with scroll\");",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Scrolls the page by a given number of pixels.",
            "description":
              [ "The `scrollBy()` function returns a Promise that resolves when the current",
                " page has been scrolled by the given number of pixels,",
                "",
                " The `x` and `y` parameters determine the number of horizontal and vertical",
                " pixels to scroll the current page. Negative numbers scroll up or to the",
                " left and positive numbers scroll down or to the right." ],
            "links": [],
            "examples":
              [ { "title": "Scroll the page by a given number of pixels",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollBy(100, 500);" ] },
                { "title": "Scroll the page by a given number of pixels and log message when done",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollBy(100, 500)",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with scroll\");",
                      "} );" ] } ] },
        "extra":
          {  } },
      { "name": "scrollTo",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "x",
              "type": "number",
              "doc": "The horizontal position, in pixels, to scroll to.",
              "srcDoc": "The horizontal position, in pixels, to scroll to." },
            { "name": "y",
              "type": "number",
              "doc": "The vertical position, in pixels, to scroll to.",
              "srcDoc": "The vertical position, in pixels, to scroll to." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "undefined. on fulfilled - When the scroll is complete.",
            "srcDoc": "on fulfilled - When the scroll is complete." },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 367 } ],
        "docs":
          { "summary": "Scrolls the page to a specific location.",
            "description":
              [ "The `scrollTo()` function returns a Promise that resolves when the current",
                " page has been scrolled to the given location.",
                "",
                " The `x` and `y` parameters determine the top-left pixel that will be",
                " displayed on screen after the scroll.",
                "",
                " To scroll to a specific element on the page, see the `$w.Node`",
                " [`scrollTo()`]($w.Node.html) function." ],
            "links": [],
            "examples":
              [ { "title": "Scroll the page to a location",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollTo(100, 500);" ] },
                { "title": "Scroll the page to a location and log message when done",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollTo(100, 500)",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with scroll\");",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Scrolls the page to a specific location.",
            "description":
              [ "The `scrollTo()` function returns a Promise that resolves when the current",
                " page has been scrolled to the given location.",
                "",
                " The `x` and `y` parameters determine the top-left pixel that is",
                " displayed on screen after the scroll.",
                "",
                " To scroll to a specific element on the page, see the `$w.Node`",
                " [`scrollTo()`]($w.Node.html) function." ],
            "links": [],
            "examples":
              [ { "title": "Scroll the page to a location",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollTo(100, 500);" ] },
                { "title": "Scroll the page to a location and log message when done",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollTo(100, 500)",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with scroll\");",
                      "} );" ] } ] },
        "extra":
          {  } },
      { "name": "trackEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventName",
              "type": "string",
              "doc": "The name of the event.",
              "srcDoc": "The name of the event." },
            { "name": "parameters",
              "type":
                [ "wix-window.trackingParameters.AddPaymentInfoEvent",
                  "wix-window.trackingParameters.AddProductImpressionEvent",
                  "wix-window.trackingParameters.AddToCartEvent",
                  "wix-window.trackingParameters.ClickProductEvent",
                  "wix-window.trackingParameters.CustomEvent",
                  "wix-window.trackingParameters.InitiateCheckoutEvent",
                  "wix-window.trackingParameters.PurchaseEvent",
                  "wix-window.trackingParameters.RemoveFromCartEvent",
                  "wix-window.trackingParameters.ViewContentEvent" ],
              "doc": "The event's parameters.",
              "srcDoc": "The event's parameters." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "filename": "window.es6",
              "lineno": 766 } ],
        "docs":
          { "summary": "Placeholder XXX",
            "description":
              [ "The `trackEvent()` function ...XXX",
                "",
                " The following are the possible `TrackEvent` values with their associated",
                " `parameters`:",
                "",
                " + `\"AddProductImpression\"` - When a user views a product.",
                "    <code class=\"inline-code\"><b><a href=\"#contents\">contents</a></b>[{<a href=\"#id\">id</a>, <a href=\"#id\">sku</a>, <b><a href=\"#id\">name</a></b>, <a href=\"#id\">price</a>, <a href=\"#id\">currency</a>, <a href=\"#id\">category</a>, <a href=\"#id\">brand</a>, <a href=\"#id\">variant</a>, <a href=\"#id\">list</a>, <a href=\"#id\">position}</a>, ...]</code>",
                "    ```",
                "    import wixWindow from 'wix-window';",
                "",
                "    wixWindow.trackEvent('AddProductImpression', {",
                "         contents: [{",
                "           sku: 'P12345',",
                "           name: 'Really Fast Running Shoes',",
                "           category: 'Apparel/Shoes',",
                "           price: 100,",
                "           currency: 'USD',",
                "           brand: 'Nike',",
                "           variant: 'Black',",
                "           list: 'Search Results',",
                "           position: 1",
                "         }]",
                "    });",
                "    ```",
                "",
                " + `\"AddProductImpression\"` - When a user views a product.",
                "    <code class=\"inline-code\"><b><a href=\"#contents\">contents</a></b>[{<a href=\"#id\">id</a>, <a href=\"#id\">sku</a>, <b><a href=\"#id\">name</a></b>, <a href=\"#id\">price</a>, <a href=\"#id\">currency</a>, <a href=\"#id\">category</a>, <a href=\"#id\">brand</a>, <a href=\"#id\">variant</a>, <a href=\"#id\">list</a>, <a href=\"#id\">position}</a>, ...]</code>",
                "    ```",
                "    import wixWindow from 'wix-window';",
                "",
                "    wixWindow.trackEvent('AddProductImpression', {",
                "         contents: [{",
                "           sku: 'P12345',",
                "           name: 'Really Fast Running Shoes',",
                "           category: 'Apparel/Shoes',",
                "           price: 100,",
                "           currency: 'USD',",
                "           brand: 'Nike',",
                "           variant: 'Black',",
                "           list: 'Search Results',",
                "           position: 1",
                "         }]",
                "    });",
                "    ```",
                "",
                " + `\"AddPaymentInfo\"` - When a payment information is added in the checkout flow.",
                "   + Optional Parameters - `category`, `content_ids`, `contents`, `currency`, `option`, `price`",
                " + `\"AddToCart\"` - When a product is added to the shopping cart.",
                "   + Required Parameters - `name`",
                "   + Optional Parameters - `brand`, `category`, `content_ids`, `currency`, `id`, `name`, `position`, `price`, `type`, `variant`",
                " + `\"CustomEvent\"` - For events that are not covered by the standard events.",
                "   + Required Parameters - `event`",
                "   + Optional Parameters - custom parameters",
                " + `\"InitiateCheckout\"` - When a user begins the checkout flow, before completing it.",
                "   + Optional Parameters - `category`, `content_ids`, `contents`, `currency`, `name`, `num_items`, `price`, `type`",
                " + `\"Lead\"` - When a lead, such as clicking on pricing or signing up for a trial, is generated.",
                "   + Optional Parameters - `category`, `currency`, `name`, `price`",
                " + `\"Purchase\"` - When a purchase is made or the checkout flow is completed.",
                "   + Required Parameters - `price`, `currency`",
                "   + Optional Parameters - `affiliation`, `category`, `content_ids`, `contents`, `coupon`, `currency`, `id`, `name`, `num_items`, `price`, `revenue`, `shipping`, `tax`, `type`",
                " + `\"ViewContent\"` - When a page is viewed.",
                "   + Required Parameters - `name`",
                "   + Optional Parameters - `brand`, `category`, `content_ids`, `contents`, `currency`, `id`, `list`, `name`, `position`, `price`, `sku`, `type`, `variant`",
                "",
                "",
                " The following parameter keys are used in the `parameters` object:",
                " + <span id=\"affiliation\"><code class=\"inline-code\">affiliation</code> - String - Name of the store where the event occurred.</span>",
                " + <span id=\"brand\"><code>brand</code> - String - Brand of the product.</span>",
                " + <span id=\"category\"><code>category</code> - String - Category of the page or product.</span>",
                " + <span id=\"content_ids\"><code>content_ids</code> - Product IDs associated with the event.</span>",
                " + <span id=\"contents\"><code>contents</code> - Object[] - An array of JSON objects that contains the product IDs associated with the event as well as additional information. The JSON objects contain the following properties:</span>",
                "   + `id`",
                "   + `quantity`",
                "   + `item_price`",
                " + <span id=\"coupon\"><code>coupon</code> - Product coupon code.</span>",
                " + <span id=\"currency\"><code>currency</code> - Currency of the specified price.</span>",
                " + <span id=\"event\"><code>event</code> - Name of a custom event.</span>",
                " + <span id=\"id\"><code>id</code> - Product ID.</span>",
                " + <span id=\"list\"><code>list</code> - List or collection to which the product belongs.</span>",
                " + <span id=\"name\"><code>name</code> - Product name.</span>",
                " + <span id=\"option\"><code>option</code> - Additional field that can describe option information on a checkout page, such as selected payment method.</span>",
                " + <span id=\"position\"><code>position</code> - Product's position in a list or collection.</span>",
                " + <span id=\"price\"><code>price</code> - Product price.</span>",
                " + <span id=\"quantity\"><code>quantity</code> - Product quantity.</span>",
                " + <span id=\"revenue\"><code>revenue</code> - Total revenue or grand total associated with the event. This value may include shipping, tax costs, or other adjustments to total revenue that you want to include as part of your revenue calculations. Note: if `revenue` is not set, its value will be automatically calculated using the product `quantity` and `price` fields of all products in the event.</span>",
                " + <span id=\"shipping\"><code>shipping</code> - Total shipping cost in provided `currency`.</span>",
                " + <span id=\"sku\"><code>sku</code> - Stock keeping unit code.</span>",
                " + <span id=\"step\"><code>step</code> - Number representing a step in the checkout process.</span>",
                " + <span id=\"tax\"><code>tax</code> - Total tax in provided `currency`.</span>",
                " + <span id=\"type\"><code>type</code> - Either \"product\" or \"product_group\", depending on the `content_ids` or `contents` being passed.</span>",
                "   + If the IDs being passed in the `content_ids` or `contents` parameters are IDs of products, then the value should be \"product\".</span>",
                "   + If the IDs being passed in the `content_ids` or `contents` parameters are IDs of product groups, then the value should be \"product_group\".</span>",
                " + <span id=\"variant\"><code>variant</code> - The variant of the product.</span>" ],
            "links": [],
            "examples": [] },
        "srcDocs":
          { "summary": "Sends a tracking event to external analytics tools.",
            "description":
              [ "The `trackEvent()` function sends an event to analytics tools connected",
                " to your site. It can send events to Google Analytics and Facebook Pixel.",
                " To learn how to connect analytics tools to your site, see",
                " [About Tracking Tools & Analytics](https://support.wix.com/en/article/about-tracking-tools-analytics).",
                "",
                " The following events and parameters are available:",
                "",
                " + `\"AddProductImpression\"` - [parameters](wix-window.trackingParameters.html#AddProductImpressionEvent) - When a user views a product. (Google Analytics only)",
                " + `\"ClickProduct\"` - [parameters](wix-window.trackingParameters.html#ClickProductEvent) - When a user clicks on a product. (Google Analytics only)",
                " + `\"ViewContent\"` - [parameters](wix-window.trackingParameters.html#ViewContentEvent) - When a key page is viewed.",
                " + `\"AddToCart\"` - [parameters](wix-window.trackingParameters.html#AddToCartEvent) - When a user adds a product to the shopping cart.",
                " + `\"RemoveFromCart\"` - [parameters](wix-window.trackingParameters.html#RemoveFromCartEvent) - When a user removes a product from the shopping cart. (Google Analytics only)",
                " + `\"InitiateCheckout\"` - [parameters](wix-window.trackingParameters.html#InitiateCheckoutEvent) - When a user starts the checkout process.",
                " + `\"AddPaymentInfo\"` - [parameters](wix-window.trackingParameters.html#AddPaymentInfoEvent) - When a user saves payment information.",
                " + `\"Purchase\"` - [parameters](wix-window.trackingParameters.html#PurchaseEvent) - When the checkout process is complete.",
                " + `\"Lead\"` - When a user subscribes to a newsletter or submits a contact form.",
                " + `\"CustomEvent\"` - [parameters](wix-window.trackingParameters.html#CustomEvent) - When a user performs an event not listed above." ],
            "links": [],
            "examples":
              [ { "title": "Send a trackEvent with parameters",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"ViewContent\", {",
                      "  id: \"P12345\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  category: \"Apparel/Shoes\",",
                      "  price: 120,",
                      "  currency: \"USD\",",
                      "  brand: \"Adidas\",",
                      "  variant: \"Black\",",
                      "  position: 1",
                      "} );" ] },
                { "title": "Send a trackEvent that doesn't take any parameters",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"Lead\");" ] },
                { "title": "Send a trackEvent from the onReady event handler",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "$w.onReady(function () {",
                      "  if(wixWindow.rendering.env === \"browser\") {",
                      "    wixWindow.trackEvent(\"ViewContent\", {",
                      "      id: \"P12345\",",
                      "      name: \"Really Fast Running Shoes\",",
                      "      category: \"Apparel/Shoes\",",
                      "      price: 120,",
                      "      currency: \"USD\",",
                      "      brand: \"Adidas\",",
                      "      variant: \"Black\",",
                      "      position: 1",
                      "    } );",
                      "  }",
                      "} );" ] } ] },
        "extra":
          { "notes":
              [ "The `trackEvent()` function only runs on published versions of your site.\n It does not work when previewing your site." ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "AddPaymentInfoEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 533 } ],
        "docs":
          { "summary": "An object used when sending an AddPaymentInfo track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddPaymentInfo trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddPaymentInfo\", {",
                      "  option: \"Visa\"",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending an AddPaymentInfo track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddPaymentInfo trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddPaymentInfo\", {",
                      "  option: \"Visa\"",
                      "} );" ] } ] },
        "members":
          [ { "name": "option",
              "type": "string",
              "docs": "Describes option information on a checkout page, such as selected payment method.",
              "srcDocs": "Describes option information on a checkout page, such as selected payment method." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "AddProductImpressionEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 541 } ],
        "docs":
          { "summary": "An object used when sending an AddProductImpression track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddProductImpression trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddProductImpression\", {",
                      "  contents: [ {",
                      "    sku: \"P12345\",",
                      "    name: \"Really Fast Running Shoes\",",
                      "    category: \"Apparel/Shoes\",",
                      "    price: 100,",
                      "    currency: \"USD\",",
                      "    brand: \"Nike\",",
                      "    variant: \"Black\",",
                      "    list: \"Search Results\",",
                      "    position: 1",
                      "  }, {",
                      "    sku: \"P67890\",",
                      "    name: \"Running Shirt\",",
                      "    category: \"Apparel/Shirts\",",
                      "    price: 50,",
                      "    currency: \"USD\",",
                      "    brand: \"Nike\",",
                      "    variant: \"Blue\",",
                      "    list: \"Search Results\",",
                      "    position: 2",
                      "  } ]",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending an AddProductImpression track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddProductImpression trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddProductImpression\", {",
                      "  contents: [ {",
                      "    sku: \"P12345\",",
                      "    name: \"Really Fast Running Shoes\",",
                      "    category: \"Apparel/Shoes\",",
                      "    price: 100,",
                      "    currency: \"USD\",",
                      "    brand: \"Nike\",",
                      "    variant: \"Black\",",
                      "    list: \"Search Results\",",
                      "    position: 1",
                      "  }, {",
                      "    sku: \"P67890\",",
                      "    name: \"Running Shirt\",",
                      "    category: \"Apparel/Shirts\",",
                      "    price: 50,",
                      "    currency: \"USD\",",
                      "    brand: \"Nike\",",
                      "    variant: \"Blue\",",
                      "    list: \"Search Results\",",
                      "    position: 2",
                      "  } ]",
                      "} );" ] } ] },
        "members":
          [ { "name": "contents",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "Object" ] },
              "docs": "Product information.",
              "srcDocs": "Product information." },
            { "name": "contents[].id",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." },
            { "name": "contents[].sku",
              "type": "string",
              "docs": "Stock keeping unit code.",
              "srcDocs": "Stock keeping unit code." },
            { "name": "contents[].name",
              "type": "string",
              "docs": "Product name.",
              "srcDocs": "Product name." },
            { "name": "contents[].category",
              "type": "string",
              "docs": "Category of the page or product.",
              "srcDocs": "Category of the page or product." },
            { "name": "contents[].price",
              "type": "number",
              "docs": "Product price.",
              "srcDocs": "Product price." },
            { "name": "contents[].currency",
              "type": "string",
              "docs": "Currency code.",
              "srcDocs": "Currency code." },
            { "name": "contents[].brand",
              "type": "string",
              "docs": "Brand name of the product.",
              "srcDocs": "Brand name of the product." },
            { "name": "contents[].variant",
              "type": "string",
              "docs": "Variant of the product.",
              "srcDocs": "Variant of the product." },
            { "name": "contents[].list",
              "type": "string",
              "docs": "List or collection the product is in.",
              "srcDocs": "List or collection the product is in." },
            { "name": "contents[].position",
              "type": "string",
              "docs": "Product's position in a list or collection.",
              "srcDocs": "Product's position in a list or collection." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "AddToCartEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 559 } ],
        "docs":
          { "summary": "An object used when sending an AddToCart track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddToCart trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddToCart\", {",
                      "  id: \"P12345\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  category: \"Apparel/Shoes\",",
                      "  price: 120.5,",
                      "  currency: \"USD\",",
                      "  brand: \"Saucony\",",
                      "  variant: \"Silver\",",
                      "  position: 2,",
                      "  quantity: 1",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending an AddToCart track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddToCart trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddToCart\", {",
                      "  id: \"P12345\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  category: \"Apparel/Shoes\",",
                      "  price: 120.5,",
                      "  currency: \"USD\",",
                      "  brand: \"Saucony\",",
                      "  variant: \"Silver\",",
                      "  position: 2,",
                      "  quantity: 1",
                      "} );" ] } ] },
        "members":
          [ { "name": "id",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." },
            { "name": "sku",
              "type": "string",
              "docs": "Stock keeping unit code.",
              "srcDocs": "Stock keeping unit code." },
            { "name": "name",
              "type": "string",
              "docs": "Product name.",
              "srcDocs": "Product name." },
            { "name": "price",
              "type": "number",
              "docs": "Product price.",
              "srcDocs": "Product price." },
            { "name": "currency",
              "type": "string",
              "docs": "Currency code.",
              "srcDocs": "Currency code." },
            { "name": "category",
              "type": "string",
              "docs": "Category of the page or product.",
              "srcDocs": "Category of the page or product." },
            { "name": "brand",
              "type": "string",
              "docs": "Brand name of the product.",
              "srcDocs": "Brand name of the product." },
            { "name": "variant",
              "type": "string",
              "docs": "Variant of the product.",
              "srcDocs": "Variant of the product." },
            { "name": "position",
              "type": "string",
              "docs": "Product's position in a list or collection.",
              "srcDocs": "Product's position in a list or collection." },
            { "name": "quantity",
              "type": "number",
              "docs": "Product quantity.",
              "srcDocs": "Product quantity." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "ClickProductEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 576 } ],
        "docs":
          { "summary": "An object used when sending a ClickProduct track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a ClickProduct trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"ClickProduct\", {",
                      "  id: \"P12345\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  category: \"Apparel/Shoes\",",
                      "  price: 120,",
                      "  currency: \"USD\",",
                      "  brand: \"Adidas\",",
                      "  variant: \"Black\",",
                      "  position: 1",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending a ClickProduct track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a ClickProduct trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"ClickProduct\", {",
                      "  id: \"P12345\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  category: \"Apparel/Shoes\",",
                      "  price: 120,",
                      "  currency: \"USD\",",
                      "  brand: \"Adidas\",",
                      "  variant: \"Black\",",
                      "  position: 1",
                      "} );" ] } ] },
        "members":
          [ { "name": "id",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." },
            { "name": "sku",
              "type": "string",
              "docs": "Stock keeping unit code.",
              "srcDocs": "Stock keeping unit code." },
            { "name": "name",
              "type": "string",
              "docs": "Product name.",
              "srcDocs": "Product name." },
            { "name": "price",
              "type": "number",
              "docs": "Product price.",
              "srcDocs": "Product price." },
            { "name": "currency",
              "type": "string",
              "docs": "Currency code.",
              "srcDocs": "Currency code." },
            { "name": "category",
              "type": "string",
              "docs": "Category of the page or product.",
              "srcDocs": "Category of the page or product." },
            { "name": "brand",
              "type": "string",
              "docs": "Brand name of the product.",
              "srcDocs": "Brand name of the product." },
            { "name": "variant",
              "type": "string",
              "docs": "Variant of the product.",
              "srcDocs": "Variant of the product." },
            { "name": "list",
              "type": "string",
              "docs": "List or collection the product is in.",
              "srcDocs": "List or collection the product is in." },
            { "name": "position",
              "type": "string",
              "docs": "Product's position in a list or collection.",
              "srcDocs": "Product's position in a list or collection." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "CustomEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 593 } ],
        "docs":
          { "summary": "An object used when sending a CustomEvent track event.",
            "description":
              [ "The object contains on required property, `event`, and any number of",
                " custom properties." ],
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a CustomEvent trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"CustomEvent\", {",
                      "  event: \"FrequentShopper\",",
                      "  num_purchases: 8,",
                      "  average_order: 245.24,",
                      "  favorite_category: \"Sporting Goods\"",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending a CustomEvent track event.",
            "description":
              [ "The object contains on required property, `event`, and any number of",
                " custom properties." ],
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a CustomEvent trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"CustomEvent\", {",
                      "  event: \"FrequentShopper\",",
                      "  num_purchases: 8,",
                      "  average_order: 245.24,",
                      "  favorite_category: \"Sporting Goods\"",
                      "} );" ] } ] },
        "members":
          [ { "name": "event",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "InitiateCheckoutEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 604 } ],
        "docs":
          { "summary": "An object used when sending an InitiateCheckout track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send an InitiateCheckout trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"InitiateCheckout\", {",
                      "  contents: [ {",
                      "    sku: \"P12345\",",
                      "    name: \"Really Fast Running Shoes\",",
                      "    category: \"Apparel/Shoes\",",
                      "    price: 100,",
                      "    currency: \"USD\",",
                      "    brand: \"Nike\",",
                      "    variant: \"Black\",",
                      "    quantity: 2",
                      "  }, {",
                      "    sku: \"P67890\",",
                      "    name: \"Running Shirt\",",
                      "    category: \"Apparel/Shirts\",",
                      "    price: 50,",
                      "    currency: \"USD\",",
                      "    brand: \"Nike\",",
                      "    variant: \"Blue\",",
                      "    quantity: 3",
                      "  } ]",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending an InitiateCheckout track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send an InitiateCheckout trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"InitiateCheckout\", {",
                      "  contents: [ {",
                      "    sku: \"P12345\",",
                      "    name: \"Really Fast Running Shoes\",",
                      "    category: \"Apparel/Shoes\",",
                      "    price: 100,",
                      "    currency: \"USD\",",
                      "    brand: \"Nike\",",
                      "    variant: \"Black\",",
                      "    quantity: 2",
                      "  }, {",
                      "    sku: \"P67890\",",
                      "    name: \"Running Shirt\",",
                      "    category: \"Apparel/Shirts\",",
                      "    price: 50,",
                      "    currency: \"USD\",",
                      "    brand: \"Nike\",",
                      "    variant: \"Blue\",",
                      "    quantity: 3",
                      "  } ]",
                      "} );" ] } ] },
        "members":
          [ { "name": "contents",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "Object" ] },
              "docs": "Product information.",
              "srcDocs": "Product information." },
            { "name": "contents[].id",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." },
            { "name": "contents[].sku",
              "type": "string",
              "docs": "Stock keeping unit code.",
              "srcDocs": "Stock keeping unit code." },
            { "name": "contents[].name",
              "type": "string",
              "docs": "Product name.",
              "srcDocs": "Product name." },
            { "name": "contents[].category",
              "type": "string",
              "docs": "Category of the page or product.",
              "srcDocs": "Category of the page or product." },
            { "name": "contents[].price",
              "type": "number",
              "docs": "Product price.",
              "srcDocs": "Product price." },
            { "name": "contents[].currency",
              "type": "string",
              "docs": "Currency code.",
              "srcDocs": "Currency code." },
            { "name": "contents[].brand",
              "type": "string",
              "docs": "Brand name of the product.",
              "srcDocs": "Brand name of the product." },
            { "name": "contents[].variant",
              "type": "string",
              "docs": "Variant of the product.",
              "srcDocs": "Variant of the product." },
            { "name": "contents[].quantity",
              "type": "number",
              "docs": "Product quantity.",
              "srcDocs": "Product quantity." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "OpenModalOptions",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 837 } ],
        "docs":
          { "summary": "An object used when opening a modal window.",
            "links":
              [ "[openModal( )](#openModal)" ],
            "examples":
              [ { "title": "Open a modal window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "  \"width\": 750,",
                      "  \"height\": 500",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when opening a modal window.",
            "links":
              [ "[openModal( )](#openModal)" ],
            "examples":
              [ { "title": "Open a modal window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "  \"width\": 750,",
                      "  \"height\": 500",
                      "} );" ] } ] },
        "members":
          [ { "name": "width",
              "type": "number",
              "docs": "Width of the modal window.",
              "srcDocs": "Width of the modal window." },
            { "name": "height",
              "type": "number",
              "docs": "Height of the modal window.",
              "srcDocs": "Height of the modal window." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PurchaseEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 621 } ],
        "docs":
          { "summary": "An object used when sending a Purchase track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a Purchase trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"Purchase\", {",
                      "  id: \"T12345\",",
                      "  affiliation: \"My Store\",",
                      "  revenue: 22.16,",
                      "  tax: 2.85,",
                      "  shipping: 5.34,",
                      "  coupon: \"SUMMER2018\",",
                      "  contents: [ {",
                      "    id: \"ABC123\",",
                      "    quantity: 2,",
                      "    price: 1.99,",
                      "    currency: \"USD\"",
                      "  }, {",
                      "    id: \"XYZ789\",",
                      "    quantity: 1,",
                      "    price: 9.99,",
                      "    currency: \"USD\"",
                      "  } ]",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending a Purchase track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a Purchase trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"Purchase\", {",
                      "  id: \"T12345\",",
                      "  affiliation: \"My Store\",",
                      "  revenue: 22.16,",
                      "  tax: 2.85,",
                      "  shipping: 5.34,",
                      "  coupon: \"SUMMER2018\",",
                      "  contents: [ {",
                      "    id: \"ABC123\",",
                      "    quantity: 2,",
                      "    price: 1.99,",
                      "    currency: \"USD\"",
                      "  }, {",
                      "    id: \"XYZ789\",",
                      "    quantity: 1,",
                      "    price: 9.99,",
                      "    currency: \"USD\"",
                      "  } ]",
                      "} );" ] } ] },
        "members":
          [ { "name": "id",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." },
            { "name": "affiliation",
              "type": "string",
              "docs": "Name of the store where the event occurred.",
              "srcDocs": "Name of the store where the event occurred." },
            { "name": "revenue",
              "type": "number",
              "docs": "Total amount of the purchase including shipping, taxes, etc.",
              "srcDocs": "Total amount of the purchase including shipping, taxes, etc." },
            { "name": "tax",
              "type": "number",
              "docs": "Total tax charge.",
              "srcDocs": "Total tax charge." },
            { "name": "shipping",
              "type": "number",
              "docs": "Total shipping charge.",
              "srcDocs": "Total shipping charge." },
            { "name": "coupon",
              "type": "string",
              "docs": "Coupon code applied to the transaction.",
              "srcDocs": "Coupon code applied to the transaction." },
            { "name": "contents",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "Object" ] },
              "docs": "Product information.",
              "srcDocs": "Product information." },
            { "name": "contents[].id",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." },
            { "name": "contents[].name",
              "type": "string",
              "docs": "Product name.",
              "srcDocs": "Product name." },
            { "name": "contents[].category",
              "type": "string",
              "docs": "Category of the page or product.",
              "srcDocs": "Category of the page or product." },
            { "name": "contents[].price",
              "type": "number",
              "docs": "Product price.",
              "srcDocs": "Product price." },
            { "name": "contents[].currency",
              "type": "string",
              "docs": "Currency code.",
              "srcDocs": "Currency code." },
            { "name": "contents[].brand",
              "type": "string",
              "docs": "Brand name of the product.",
              "srcDocs": "Brand name of the product." },
            { "name": "contents[].variant",
              "type": "string",
              "docs": "Variant of the product.",
              "srcDocs": "Variant of the product." },
            { "name": "contents[].quantity",
              "type": "number",
              "docs": "Product quantity.",
              "srcDocs": "Product quantity." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "RemoveFromCartEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 643 } ],
        "docs":
          { "summary": "An object used when sending a RemoveFromCart track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a RemoveFromCart trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"RemoveFromCart\", {",
                      "  id: \"P12346\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  price: 125.95,",
                      "  currency: \"USD\",",
                      "  category: \"Apparel/Shoes\",",
                      "  brand: \"Adidas\",",
                      "  variant: \"Black\",",
                      "  position: 1,",
                      "  quantity: 1",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending a RemoveFromCart track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a RemoveFromCart trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"RemoveFromCart\", {",
                      "  id: \"P12346\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  price: 125.95,",
                      "  currency: \"USD\",",
                      "  category: \"Apparel/Shoes\",",
                      "  brand: \"Adidas\",",
                      "  variant: \"Black\",",
                      "  position: 1,",
                      "  quantity: 1",
                      "} );" ] } ] },
        "members":
          [ { "name": "id",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." },
            { "name": "name",
              "type": "string",
              "docs": "Product name.",
              "srcDocs": "Product name." },
            { "name": "price",
              "type": "number",
              "docs": "Product price.",
              "srcDocs": "Product price." },
            { "name": "currency",
              "type": "string",
              "docs": "Currency code.",
              "srcDocs": "Currency code." },
            { "name": "category",
              "type": "string",
              "docs": "Category of the page or product.",
              "srcDocs": "Category of the page or product." },
            { "name": "brand",
              "type": "string",
              "docs": "Brand name of the product.",
              "srcDocs": "Brand name of the product." },
            { "name": "variant",
              "type": "string",
              "docs": "Variant of the product.",
              "srcDocs": "Variant of the product." },
            { "name": "position",
              "type": "string",
              "docs": "Product's position in a list or collection.",
              "srcDocs": "Product's position in a list or collection." },
            { "name": "quantity",
              "type": "number",
              "docs": "Product quantity.",
              "srcDocs": "Product quantity." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "ViewContentEvent",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 659 } ],
        "docs":
          { "summary": "An object used when sending a ViewContent track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a ViewContent trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"ViewContent\", {",
                      "  id: \"P12345\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  category: \"Apparel/Shoes\",",
                      "  price: 120,",
                      "  currency: \"USD\",",
                      "  brand: \"Adidas\",",
                      "  variant: \"Black\",",
                      "  position: 1",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "An object used when sending a ViewContent track event.",
            "links":
              [ "[trackEvent( )](#trackEvent)" ],
            "examples":
              [ { "title": "Send a ViewContent trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"ViewContent\", {",
                      "  id: \"P12345\",",
                      "  name: \"Really Fast Running Shoes\",",
                      "  category: \"Apparel/Shoes\",",
                      "  price: 120,",
                      "  currency: \"USD\",",
                      "  brand: \"Adidas\",",
                      "  variant: \"Black\",",
                      "  position: 1",
                      "} );" ] } ] },
        "members":
          [ { "name": "id",
              "type": "string",
              "docs": "Product ID.",
              "srcDocs": "Product ID." },
            { "name": "sku",
              "type": "string",
              "docs": "Stock keeping unit code.",
              "srcDocs": "Stock keeping unit code." },
            { "name": "name",
              "type": "string",
              "docs": "Product name.",
              "srcDocs": "Product name." },
            { "name": "price",
              "type": "number",
              "docs": "Product price.",
              "srcDocs": "Product price." },
            { "name": "currency",
              "type": "string",
              "docs": "Currency code.",
              "srcDocs": "Currency code." },
            { "name": "category",
              "type": "string",
              "docs": "Category of the page or product.",
              "srcDocs": "Category of the page or product." },
            { "name": "brand",
              "type": "string",
              "docs": "Brand name of the product.",
              "srcDocs": "Brand name of the product." },
            { "name": "variant",
              "type": "string",
              "docs": "Variant of the product.",
              "srcDocs": "Variant of the product." },
            { "name": "list",
              "type": "string",
              "docs": "List or collection the product is in.",
              "srcDocs": "List or collection the product is in." },
            { "name": "position",
              "type": "string",
              "docs": "Product's position in a list or collection.",
              "srcDocs": "Product's position in a list or collection." } ],
        "labels":
          [ "new",
            "removed" ] },
      { "name": "WindowSizeInfo",
        "locations":
          [ { "filename": "window.es6",
              "lineno": 280 } ],
        "docs":
          { "summary": "An object returned by the `getBoundingRect()` function that contains information about the window's size, the document's size, and the current scroll position.",
            "links":
              [ "[getBoundingRect( )](#getBoundingRect)" ],
            "examples":
              [ { "title": "Get information about the window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getBoundingRect()",
                      "  .then( (windowSizeInfo) => {",
                      "    let windowHeight = windowSizeInfo.window.height;      // 565",
                      "    let windowWidth = windowSizeInfo.window.width;        // 1269",
                      "    let documentHeight = windowSizeInfo.document.height;  // 780",
                      "    let documentWidth = windowSizeInfo.document.width;    // 1269",
                      "    let scrollX = windowSizeInfo.scroll.x;                // 0",
                      "    let scrollY = windowSizeInfo.scroll.y;                // 120",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "An object returned by the `getBoundingRect()` function that contains information about the window's size, the document's size, and the current scroll position.",
            "links":
              [ "[getBoundingRect( )](#getBoundingRect)" ],
            "examples":
              [ { "title": "Get information about the window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getBoundingRect()",
                      "  .then( (windowSizeInfo) => {",
                      "    let windowHeight = windowSizeInfo.window.height;      // 565",
                      "    let windowWidth = windowSizeInfo.window.width;        // 1269",
                      "    let documentHeight = windowSizeInfo.document.height;  // 780",
                      "    let documentWidth = windowSizeInfo.document.width;    // 1269",
                      "    let scrollX = windowSizeInfo.scroll.x;                // 0",
                      "    let scrollY = windowSizeInfo.scroll.y;                // 120",
                      "  } );" ] } ] },
        "members":
          [ { "name": "window",
              "type": "Object",
              "docs": "An object with `height` and `width` key:value pairs containing the size of the viewable area of the current browser window.",
              "srcDocs": "An object with `height` and `width` key:value pairs containing the size of the viewable area of the current browser window." },
            { "name": "document",
              "type": "Object",
              "docs": "An object with `height` and `width` key:value pairs containing the size of the actual body of the page, which may be larger or smaller than the current window.",
              "srcDocs": "An object with `height` and `width` key:value pairs containing the size of the actual body of the page, which may be larger or smaller than the current window." },
            { "name": "scroll",
              "type": "Object",
              "docs": "An object with `x` and `y` key:value pairs containing the scroll offset of the page within the window from the top-left corner.",
              "srcDocs": "An object with `x` and `y` key:value pairs containing the scroll offset of the page within the window from the top-left corner." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }