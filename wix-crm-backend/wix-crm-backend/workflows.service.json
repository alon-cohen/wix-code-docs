{ "name": "workflows",
  "memberOf": "wix-crm-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "workflowsApi.js",
      "lineno": 15 },
  "docs":
    { "summary": "The wix-crm-backend module contains functionality for working with\n [your site's workflows](https://support.wix.com/en/article/about-workflows)\n from backend code.",
      "description":
        [ "To use the CRM API, import `wixCRM` from the `wix-crm-backend` module:",
          "",
          "   ```javascript",
          "   import wixCRM from 'wix-crm-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "archiveCard",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "card id." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 138 } ],
        "docs":
          { "summary": "Archive a card.",
            "description":
              [ "The `archiveCard()` function returns a Promise" ],
            "links": [],
            "examples":
              [ { "title": "Archive a card",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function archiveCard(){",
                      "\treturn await wixCrm.workflows.archiveCard(",
                      "\t\t\"1e629ddc-94a1-424f-81f9-c6b81719f46a\"",
                      "\t);",
                      "}",
                      "",
                      "// Returns a promise" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createCard",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "workflowId",
              "type": "string",
              "doc": "the Id of the workflow in which card should enter." },
            { "name": "phaseId",
              "type": "string",
              "doc": "the Id of the phase in which card should enter." },
            { "name": "card",
              "type": "wix-crm-backend.workflows.CardInfo",
              "doc": "The data required for card creation." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - The id of the new card.\nRejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 15 } ],
        "docs":
          { "summary": "Creates a new card.",
            "description":
              [ "The `createCard()` function returns a Promise that resolves to the created card",
                " ID." ],
            "links": [],
            "examples":
              [ { "title": "Create a card",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function createCard(){",
                      "\treturn await wixCrm.workflows.createCard(",
                      "\t\t\"63c83c38-f504-4eb8-a48c-1d77c436a678\", //workflowId",
                      "\t\t\"66f6443c-884f-4b12-beae-ab864fb489db\", //phaseId",
                      "\t\t{",
                      "\t\t\t\"name\": \"card-title\",",
                      "\t\t\t\"contactId\": \"95bc7a80-5500-4445-9c90-adc0ff1b25ac\", //contact-id",
                      "\t\t}",
                      "\t);",
                      "}",
                      "// Returns a promise that resolves to:",
                      "// \"3c9683ea-f6cc-470b-b0d1-2eb6b8cea912\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createPhase",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "workflowId",
              "type": "string",
              "doc": "the workflow id to add the new phase." },
            { "name": "phase",
              "type": "wix-crm-backend.workflows.PhaseInfo",
              "doc": "The data required for phase creation." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - The new phase Id.\nRejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 15 } ],
        "docs":
          { "summary": "Creates a new phase.",
            "description":
              [ "The `createPhase()` function returns a Promise that resolves to the created phase",
                " ID." ],
            "links": [],
            "examples":
              [ { "title": "Create a phase",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function createPhase(){",
                      "\treturn await wixCrm.workflows.createPhase(",
                      "\t\t\"63c83c38-f504-4eb8-a48c-1d77c436a678\",",
                      "\t\t{",
                      "\t\t\t\"name\": \"phase-name\",",
                      "\t\t }",
                      "\t);",
                      "}",
                      "",
                      "// Returns a promise that resolves to:",
                      "// \"3c9683ea-f6cc-470b-b0d1-2eb6b8cea912\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createWorkflow",
        "labels":
          [ "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "workflow",
              "type": "wix-crm-backend.workflows.types.WorkflowInfo",
              "doc": "The data required for workflow creation." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - Id of the ne workflow.\nRejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 27 } ],
        "docs":
          { "summary": "Creates a new workflow.",
            "description":
              [ "The `createWorkflow()` function returns a Promise that resolves to the created workflow",
                " ID." ],
            "links": [],
            "examples":
              [ { "title": "Create a new workflow",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function createWorkflow(){",
                      "\treturn await wixCrm.workflows.createWorkflow(",
                      "\t\t{",
                      "\t\t\t\"name\": \"workflow-name\",",
                      "\t\t\t\"description\":\"workflow-description\"",
                      "\t\t}",
                      "\t);",
                      "}",
                      "",
                      "// Returns a promise that resolves to:",
                      "// \"3c9683ea-f6cc-470b-b0d1-2eb6b8cea912\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteCard",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "ID of the card to delete." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 40 } ],
        "docs":
          { "summary": "Delete card by ID.",
            "description":
              [ "The `deleteCard()` function returns a Promise",
                " for delete operation by given ID." ],
            "links": [],
            "examples":
              [ { "title": "Delete a card",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function deleteCard(){",
                      "\treturn await wixCrm.workflows.deleteCard(\"5779cc72-5e66-4de0-96ec-47c17ba07cac\");",
                      "}",
                      "",
                      "",
                      "// Returns a promise that resolves to void" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deletePhase",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the phase to delete." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 36 } ],
        "docs":
          { "summary": "Delete phase by ID.",
            "description":
              [ "The `deletePhase()` function returns a Promise",
                " for delete operation by given ID." ],
            "links": [],
            "examples":
              [ { "title": "Delete a phase",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function deletePhase(){",
                      "\treturn await wixCrm.workflows.deletePhase(\"5779cc72-5e66-4de0-96ec-47c17ba07cac\");",
                      "}",
                      "",
                      "",
                      "// Returns a promise that resolves to void." ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteWorkflow",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the workflow to delete." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 27 } ],
        "docs":
          { "summary": "Delete workflow by ID.",
            "description":
              [ "The `deleteWorkflow()` function returns a Promise",
                " for delete operation by given ID." ],
            "links": [],
            "examples":
              [ { "title": "Delete a workflow",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function deleteWorkflow(){",
                      "\treturn await wixCrm.workflows.deleteWorkflow(",
                      "\t\t\"7794e0f3-872d-42fb-82ae-212ba5a29391\"",
                      "\t);",
                      "}",
                      "",
                      "// Returns a promise that resolves to void" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getCard",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "ID of the card to get." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflow.Card" ] },
            "doc": "Fulfilled - The card with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 58 } ],
        "docs":
          { "summary": "Gets an existing card by ID.",
            "description":
              [ "The `getCard()` function returns a Promise that resolves to card",
                " whose ID matches the given ID." ],
            "links": [],
            "examples":
              [ { "title": "Get a card",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function getCard(){",
                      "\treturn await wixCrm.workflows.getCard(\"63c83c38-f504-4eb8-a48c-1d77c436a678\");",
                      "}",
                      "",
                      "// Returns a promise that resolves to ",
                      "// {",
                      "//    info:{",
                      "//\t\t\"id\": \"63c83c38-f504-4eb8-a48c-1d77c436a678\",",
                      "//      \"createdAt\": \"2019-05-05T12:23:43Z\",",
                      "//      \"updatedAt\": \"2019-05-05T12:23:43Z\",",
                      "//      \"description\": \"description..\",",
                      "//      \"name\": \"card-title\",",
                      "//      \"contactId\": \"95bc7a80-5500-4445-9c90-adc0ff1b25ac\", //contact-id",
                      "//   }",
                      "// }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getPhase",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "phase id." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflow.Phase" ] },
            "doc": "Fulfilled - The phase with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 54 } ],
        "docs":
          { "summary": "Gets an existing phase by ID.",
            "description":
              [ "The `getPhase()` function returns a Promise that resolves to phase",
                " whose ID matches the given ID." ],
            "links": [],
            "examples":
              [ { "title": "Get a phase",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function getPhase(){",
                      "\treturn await wixCrm.workflows.getPhase(\"66f6443c-884f-4b12-beae-ab864fb489db\");",
                      "}",
                      "",
                      "// Returns a promise that resolves to:",
                      "// {",
                      "//   info:{",
                      "//      id:\"66f6443c-884f-4b12-beae-ab864fb489db\",",
                      "//      name:\"phase-name\",",
                      "//   },",
                      "//   cardList:[{",
                      "//      total: 1,",
                      "//      cards:[{",
                      "//        info:CardInfo",
                      "//      }]",
                      "//   }]",
                      "// }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getWorkflow",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "id of the workflow." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "crm-backend.workflows.Workflow" ] },
            "doc": "Fulfilled - The workflow with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 45 } ],
        "docs":
          { "summary": "Gets an existing workflow by ID.",
            "description":
              [ "The `getWorkflow()` function returns a Promise that resolves to workflow",
                " whose ID matches the given ID." ],
            "links": [],
            "examples":
              [ { "title": "Get a workflow",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function getWorkflow(){",
                      "\treturn await wixCrm.workflows.getWorkflow(\"63c83c38-f504-4eb8-a48c-1d77c436a678\");",
                      "}",
                      "",
                      "// Returns a promise that resolves to ",
                      "//{ workflow: Workflow}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listCards",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "workflowId",
              "type": "string",
              "doc": "workflow id in which cards resides." },
            { "name": "listCardsRequest",
              "type": "wix-crm-backend.workflows.ListCardsRequest",
              "doc": "options to pull cards from a workflow." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.ListCardsResponse" ] },
            "doc": "Fulfilled - The  with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 78 } ],
        "docs":
          { "summary": "Gets an queries in listCardsRequest.",
            "description":
              [ "The `listCards()` function returns a Promise that resolves to cards" ],
            "links": [],
            "examples":
              [ { "title": "Get a list of cards",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function getCards(){",
                      "\treturn await wixCrm.workflows.listCards(",
                      "\t\t\"5e551ef1-fc6b-4bae-9993-87d19b0eb2a2\", //workflowId",
                      "\t\t{",
                      "\t\t\t\"phaseId\":\"d77ae565-dd80-4745-b546-1ac4ed33e64b\", ",
                      "\t\t\t\"limit\": 2,",
                      "\t\t\t\"offset\": 0,",
                      "\t\t});",
                      "}",
                      "",
                      "",
                      "// Returns a promise that resolves to:",
                      "// {",
                      "//   \"cards\": [",
                      "//       {",
                      "//           \"info\": {",
                      "//               \"id\": \"90e4d049-b808-4292-b582-c589022061bf\",",
                      "//               \"name\": \"title\",",
                      "//               \"contactId\": \"bf0c987e-e644-4342-8269-201f217dbcc0\",",
                      "//               \"createdAt\": \"2019-05-06T10:47:43Z\",",
                      "//               \"updatedAt\": \"2019-05-06T10:47:43Z\"",
                      "//           }",
                      "//       },",
                      "//       {",
                      "//           \"info\": {",
                      "//               \"id\": \"d396f359-e6fb-4cbb-8205-de5e1f22d620\",",
                      "//               \"name\": \"title2\",",
                      "//               \"contactId\": \"af744d71-c9c1-4d99-95b7-b839bd85983f\",",
                      "//               \"createdAt\": \"2019-05-06T10:46:53Z\",",
                      "//               \"updatedAt\": \"2019-05-06T10:46:53Z\"",
                      "//           }",
                      "//       }",
                      "//   ],",
                      "//   \"pagination\": {",
                      "//       \"offset\": 0,",
                      "//       \"limit\": 2,",
                      "//       \"total\": 2",
                      "//   }",
                      "// }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listPhases",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "workflowId",
              "type": "string",
              "doc": "workflow id in which phases resides." },
            { "name": "listRequest",
              "type": "wix-crm-backend.workflows.ListRequest",
              "doc": "options to pull phases from a workflow." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.ListPhasesResponse" ] },
            "doc": "Fulfilled - .\nRejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 74 } ],
        "docs":
          { "summary": "Gets an queries in listWorkflowsRequest.",
            "description":
              [ "The `listPhases()` function returns a Promise that resolves to phases" ],
            "links": [],
            "examples":
              [ { "title": "Get a list of phases",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function getPhases(){",
                      "\treturn await wixCrm.workflows.listPhases(",
                      "\t\t\"5e551ef1-fc6b-4bae-9993-87d19b0eb2a2\",",
                      "\t\t{",
                      "\t\t\t\"limit\": 2,",
                      "\t\t\t\"offset\": 0,",
                      "\t\t});",
                      "}",
                      "",
                      "// Returns a promise that resolves to:",
                      "// {",
                      "//   \"phases\": [",
                      "//     {",
                      "//         \"info\": {",
                      "//             \"id\": \"d77ae565-dd80-4745-b546-1ac4ed33e64b\",",
                      "//             \"name\": \"ytrytr\"",
                      "//         },",
                      "//         \"cardsList\": {",
                      "//             \"total\": 0,",
                      "//             \"cards\": []",
                      "//         }",
                      "//     },",
                      "//     {",
                      "//         \"info\": {",
                      "//             \"id\": \"9bc1bbb7-a588-4520-b9ef-67f6e02a0d41\",",
                      "//             \"name\": \"rewrew\"",
                      "//         },",
                      "//         \"cardsList\": {",
                      "//             \"total\": 0,",
                      "//             \"cards\": []",
                      "//         }",
                      "//     }",
                      "// ],",
                      "// \"pagination\": {",
                      "//     \"offset\": 0,",
                      "//     \"limit\": 2,",
                      "//     \"total\": 2",
                      "// }",
                      "// }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listWorkflows",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "listRequest",
              "type": "wix-crm-backend.workflows.ListRequest",
              "doc": "options to pull workflows." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.ListWorkflowsResponse" ] },
            "doc": "Fulfilled - .\nRejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 65 } ],
        "docs":
          { "summary": "Gets an queries in listWorkflowsRequest.",
            "description":
              [ "The `listWorkflows()` function returns a Promise that resolves to workflows" ],
            "links": [],
            "examples":
              [ { "title": "Get a list of workflows",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function getWorkflows(){",
                      "",
                      "\treturn await wixCrm.workflows.listWorkflows({",
                      "\t\t\"limit\": 2,",
                      "\t\t\"offset\": 0,",
                      "\t\t});",
                      "}",
                      "",
                      "// Returns a promise that resolves to:",
                      "//{\"workflows\": [",
                      "//   {",
                      "//     \"id\": \"f01971ac-5514-43b0-bf6c-dde93345e4e3\",",
                      "//     \"name\": \"Sales Leads\",",
                      "//     \"description\": \"Manage projects and prioritize your contacts at a glance.\",",
                      "//     \"createdAt\": \"2019-03-25T12:19:28.952Z\",",
                      "// },",
                      "// {",
                      "//     \"id\": \"d5a7848d-121b-4ee3-ab53-9ec6f4acaecc\",",
                      "//     \"name\": \"new-workflow-name\",",
                      "//     \"description\": \"new-workflow-description\",",
                      "//     \"createdAt\": \"2019-05-05T09:49:16.580Z\",",
                      "// }],",
                      "// \"pagination\": {",
                      "//     \"offset\": 0,",
                      "//     \"limit\": 2,",
                      "//     \"total\": 8",
                      "// }",
                      "//}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "moveCard",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "moveCardRequest",
              "type": "wix-crm-backend.workflows.MoveCardRequest",
              "doc": "The new phase id and the new position to move in that phase;" } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 101 } ],
        "docs":
          { "summary": "Gets an new position in moveCardRequest.",
            "description":
              [ "The `moveCard()` function returns a Promise" ],
            "links": [],
            "examples":
              [ { "title": "Move a card",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function moveCard(){",
                      "\treturn await wixCrm.workflows.moveCard({",
                      "\t\t\"newPhaseId\":\"acec6d40-1bfe-42f0-a750-38d1473e0ef5\",",
                      "\t\t\"id\":\"1e629ddc-94a1-424f-81f9-c6b81719f46a\",",
                      "\t\t\"newPosition\":0",
                      "\t});",
                      "}",
                      "",
                      "// Returns a promise that resolves to void" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "movePhase",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "movePhaseRequest",
              "type": "wix-crm-backend.workflows.MovePhaseRequest",
              "doc": "The new position to move phase in a workflow." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 97 } ],
        "docs":
          { "summary": "Gets an new position in movePhaseRequest.",
            "description":
              [ "The `movePhase()` function returns a Promise" ],
            "links": [],
            "examples":
              [ { "title": "Move a phase",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function movePhase(){",
                      "\treturn await wixCrm.workflows.movePhase({",
                      "\t\t\"workflowId\":\"63c83c38-f504-4eb8-a48c-1d77c436a678\",",
                      "\t\t\"id\":\"66f6443c-884f-4b12-beae-ab864fb489db\",",
                      "\t\t\"newPosition\":0",
                      "\t});",
                      "}",
                      "",
                      "// Returns a promise that resolves to void." ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "restoreCard",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "restoreCardRequest",
              "type": "wix-crm-backend.workflows.MoveCardRequest",
              "doc": "The data required for restoring a card." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 155 } ],
        "docs":
          { "summary": "Restore a card from archive phase.",
            "description":
              [ "The `restoreCard()` function returns a Promise",
                " ID." ],
            "links": [],
            "examples":
              [ { "title": "Restore a card",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function restoreCard(){",
                      "\treturn await wixCrm.workflows.restoreCard({",
                      "\t\t\"newPhaseId\":\"acec6d40-1bfe-42f0-a750-38d1473e0ef5\",",
                      "\t\t\"id\":\"1e629ddc-94a1-424f-81f9-c6b81719f46a\",",
                      "\t\t\"newPosition\":0",
                      "\t});",
                      "}",
                      "// Returns a promise that resolves to void" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updatePhaseFields",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "phaseId",
              "type": "wix-crm-backend.workflows.UpdatePhaseRequest",
              "doc": "The data required for phase update." },
            { "name": "updatePhaseRequest",
              "type": "wix-crm-backend.workflows.UpdatePhaseRequest",
              "doc": "subset of fields and values to update." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 114 } ],
        "docs":
          { "summary": "Update an existing phase.",
            "description":
              [ "The `updatePhaseFields()` function returns a Promise" ],
            "links": [],
            "examples":
              [ { "title": "Update a phase",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function updatePhaseFields(){",
                      "\treturn await wixCrm.workflows.updatePhaseFields(\"66f6443c-884f-4b12-beae-ab864fb489db\",{",
                      "\t\tname: \"new phase!\"",
                      "\t});",
                      "}",
                      "",
                      "// Returns a promise that resolves to void." ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateWorkflowFields",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "extrnal:String",
              "doc": "workflow id." },
            { "name": "workflow",
              "type": "wix-crm-backend.workflows.WorkflowInfo",
              "doc": "subset of fields and values to update ." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 87 } ],
        "docs":
          { "summary": "Update an existing workflow.",
            "description":
              [ "The `updateWorkflowFields()` function returns a Promise" ],
            "links": [],
            "examples":
              [ { "title": "Update a workflow",
                  "body":
                    [ "import wixCrm from 'wix-crm-backend';",
                      "",
                      "export async function updateWorkflowFields(){",
                      "\treturn await wixCrm.workflows.updateWorkflowFields(\"63c83c38-f504-4eb8-a48c-1d77c436a678\",{",
                      "\t\tname:\"new name\"",
                      "\t});",
                      "}",
                      "",
                      "// Returns a promise that resolves to void." ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }