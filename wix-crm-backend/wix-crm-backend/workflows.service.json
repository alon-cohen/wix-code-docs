{ "name": "workflows",
  "memberOf": "wix-crm-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "workflowsApi.js",
      "lineno": 14 },
  "docs":
    { "summary": "The wix-crm-backend module contains functionality for working with\n [your site's price quotes](https://support.wix.com/en/article/about-workflows)\n from backend code.",
      "description":
        [ "To use the CRM API, import `wixCRM` from the `wix-crm-backend` module:",
          "",
          "   ```javascript",
          "   import wixCRM from 'wix-crm-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "archiveCard",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "archiveCardRequest",
              "type": "ArchiveCardRequest",
              "doc": "The data required for card to archive." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 145 } ],
        "docs":
          { "summary": "Archive a card.",
            "description":
              [ "The `archiveCard()` function returns a Promise that resolves to nothing",
                " ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createCard",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "createPhaseRequest",
              "type": "CreatePhaseRequest",
              "doc": "The data required for card creation." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.CreatePhaseResponse" ] },
            "doc": "Fulfilled - The result of card creation, holding the generated ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 35 } ],
        "docs":
          { "summary": "Creates a new card.",
            "description":
              [ "The `createCard()` function returns a Promise that resolves to the created card",
                " ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createPhase",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "createPhaseRequest",
              "type": "CreatePhaseRequest",
              "doc": "The data required for phase creation." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.CreatePhaseResponse" ] },
            "doc": "Fulfilled - The result of phase creation, holding the generated ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 35 } ],
        "docs":
          { "summary": "Creates a new phase.",
            "description":
              [ "The `createPhase()` function returns a Promise that resolves to the created phase",
                " ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createWorkflow",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "createWorkflowRequest",
              "type": "ICreateWorkflowRequest",
              "doc": "The data required for workflow creation." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.ICreateWorkflowResponse" ] },
            "doc": "Fulfilled - The result of workflow creation, holding the generated ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 26 } ],
        "docs":
          { "summary": "Creates a new workflow.",
            "description":
              [ "The `createWorkflow()` function returns a Promise that resolves to the created workflow",
                " ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteCard",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the card to delete." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Workflow.DeleteCardResponse" ] },
            "doc": "Fulfilled - The result of card delete by the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 54 } ],
        "docs":
          { "summary": "Delete card by ID.",
            "description":
              [ "The `deleteCard()` function returns a Promise that resolves to DeleteCardResponse",
                " for delete operation by given ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deletePhase",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the phase to delete." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Workflow.DeletePhaseResponse" ] },
            "doc": "Fulfilled - The result of phase delete by the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 54 } ],
        "docs":
          { "summary": "Delete invoice by ID.",
            "description":
              [ "The `deleteWorkflow()` function returns a Promise that resolves to DeletePhaseResponse",
                " for delete operation by given ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteWorkflow",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the workflow to delete." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Workflow.IErrorResult" ] },
            "doc": "Fulfilled - The result of workflow delete by the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 45 } ],
        "docs":
          { "summary": "Delete invoice by ID.",
            "description":
              [ "The `deleteWorkflow()` function returns a Promise that resolves to IErrorResult",
                " for delete operation by given ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getCard",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "getCardRequest",
              "type": "GetCardRequest",
              "doc": "The ID of the card to get." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflow.GetCardResponse" ] },
            "doc": "Fulfilled - The card with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 73 } ],
        "docs":
          { "summary": "Gets an existing card by ID.",
            "description":
              [ "The `getCard()` function returns a Promise that resolves to card",
                " whose ID matches the given ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getPhase",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the phase to get." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflow.GetPhaseResponse" ] },
            "doc": "Fulfilled - The phase with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 73 } ],
        "docs":
          { "summary": "Gets an existing phase by ID.",
            "description":
              [ "The `getPhase()` function returns a Promise that resolves to phase",
                " whose ID matches the given ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getWorkflow",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the workflow to get." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflow.IWorkflow" ] },
            "doc": "Fulfilled - The workflow with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 64 } ],
        "docs":
          { "summary": "Gets an existing workflow by ID.",
            "description":
              [ "The `getWorkflow()` function returns a Promise that resolves to workflow",
                " whose ID matches the given ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listCards",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "listCardsRequest",
              "type": "ListCardsRequest",
              "doc": "The query params to pull cards of a workflow." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.ListCardsResponse" ] },
            "doc": "Fulfilled - The  with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 92 } ],
        "docs":
          { "summary": "Gets an queries in listCardsRequest.",
            "description":
              [ "The `listCardsRequest()` function returns a Promise that resolves to cards" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listPhases",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "listPhasesRequest",
              "type": "string",
              "doc": "The query params to pull phases of a workflow." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.ListPhasesResponse" ] },
            "doc": "Fulfilled - The  with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 92 } ],
        "docs":
          { "summary": "Gets an queries in listWorkflowsRequest.",
            "description":
              [ "The `listPhasesRequest()` function returns a Promise that resolves to phases" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listWorkflows",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "listWorkflowsRequest",
              "type": "string",
              "doc": "The query params to pull workflows." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.workflows.IWorkflow" ] },
            "doc": "Fulfilled - The workflow with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "workflowsApi.js",
              "lineno": 83 } ],
        "docs":
          { "summary": "Gets an queries in listWorkflowsRequest.",
            "description":
              [ "The `listWorkflowsRequest()` function returns a Promise that resolves to workflows" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "moveCard",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "moveCardRequest",
              "type": "MoveCardRequest",
              "doc": "The new phase id and the new position to move in that phase;" } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 111 } ],
        "docs":
          { "summary": "Gets an new position in moveCardRequest.",
            "description":
              [ "The `moveCardRequest()` function returns a Promise that resolves to nothing" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "movePhase",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "movePhaseRequest",
              "type": "string",
              "doc": "The new position to move phase in a workflow." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "phasesApi.js",
              "lineno": 111 } ],
        "docs":
          { "summary": "Gets an new position in movePhaseRequest.",
            "description":
              [ "The `movePhaseRequest()` function returns a Promise that resolves to nothing" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "restoreCard",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "restoreCardRequest",
              "type": "RestoreCardRequest",
              "doc": "The data required for restoring a card." } ],
        "ret":
          { "type": "Promise",
            "doc": "Rejected - Error message." },
        "locations":
          [ { "filename": "cardsApi.js",
              "lineno": 163 } ],
        "docs":
          { "summary": "Restore a card.",
            "description":
              [ "The `restoreCard()` function returns a Promise that resolves to nothing",
                " ID." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }