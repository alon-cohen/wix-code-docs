{ "name": "invoices",
  "memberOf": "wix-crm-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "invoices.js",
      "lineno": 16 },
  "docs":
    { "summary": "The wix-crm-backend module contains functionality for working with\n [your site's invoices](https://support.wix.com/en/article/about-wix-invoices)\n from backend code.",
      "description":
        [ "To use the CRM API, import `wixCRM` from the `wix-crm-backend` module:",
          "",
          "   ```javascript",
          "   import wixCRM from 'wix-crm-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "createInvoice",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "createInvoiceRequest",
              "type": "ICreateInvoiceRequest",
              "doc": "The data required for invoice creation." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.invoices.IResponse" ] },
            "doc": "Fulfilled - The result of invoice creation, holding the generated ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "invoices.js",
              "lineno": 28 } ],
        "docs":
          { "summary": "Creates a new invoice.",
            "description":
              [ "The `createInvoice()` function returns a Promise that resolves to the created invoice",
                " ID." ],
            "links": [],
            "examples":
              [ { "title": "Create new invoice",
                  "body":
                    [ "import wixCrmBackend from 'wix-crm-backend';",
                      "",
                      "export function createInvoice(customer, currency, lineItems, discount, payments, metadata, dates) {",
                      "    const createInvoiceRequest = {",
                      "        data: {",
                      "            customer: customer,",
                      "            currency: currency,",
                      "            lineItems: lineItems,",
                      "            discount: discount,",
                      "            payments: payments,",
                      "            metadata: metadata,",
                      "            dates: dates",
                      "        }",
                      "    };",
                      "",
                      "    return wixCrmBackend.invoices.createInvoice(createInvoiceRequest);",
                      "};",
                      "",
                      "function createInvoiceExample() {",
                      "    const uuidv4 = () => {",
                      "        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {",
                      "            const r = Math.random() * 16 | 0,",
                      "                v = c == 'x' ? r : (r & 0x3 | 0x8);",
                      "            return v.toString(16);",
                      "        });",
                      "    };",
                      "",
                      "    const customer = {",
                      "        contactId: \"de1c4158-ab41-4c42-a2c9-1c2ab60ba8e7\",",
                      "        email: \"dan_demo@wix.com\",",
                      "        address: {",
                      "            street: \"someStreet\",",
                      "            city: \"someCity\",",
                      "            zip: \"someZip\",",
                      "            state: \"someState\",",
                      "            country: \"someCountry\"",
                      "        },",
                      "        phone: \"somePhone\",",
                      "        company: \"someCompany\",",
                      "        fullName: \"Dan Smith (Demo)\",",
                      "        firstName: \"Dan\",",
                      "        lastName: \"Smith (Demo)\"",
                      "    };",
                      "",
                      "    const lineItems = [{",
                      "        id: uuidv4(),",
                      "        name: \"iyuiyui\",",
                      "        description: \"someDescription\",",
                      "        price: 6565.0,",
                      "        quantity: 1.0,",
                      "        taxes: [{",
                      "            name: \"someTaxName\",",
                      "            rate: 18.0",
                      "        }]",
                      "    }];",
                      "",
                      "    const discount = {",
                      "        value: 2.0,",
                      "        type: \"Fixed\"",
                      "    };",
                      "",
                      "    const payments = [{",
                      "        id: uuidv4(),",
                      "        type: \"offline\",",
                      "        amount: 18.0,",
                      "        date: \"2019-03-14T00:00:00Z\"",
                      "    }];",
                      "",
                      "    const metadata = {",
                      "        notes: \"someNote\",",
                      "        legalTerms: \"someLegalTerms\",",
                      "        sourceUrl: \"http://someSourceUrl\",",
                      "        sourceProperties: {",
                      "            \"key1\": \"value1\"",
                      "        }",
                      "    };",
                      "",
                      "    const dates = {",
                      "        issueDate: \"2019-03-13T00:00:00Z\",",
                      "        dueDate: \"2020-03-13T00:00:00Z\",",
                      "        timeZoneCode: \"Asia/Jerusalem\"",
                      "    };",
                      "",
                      "    createInvoice(customer, \"ILS\", lineItems, discount, payments, metadata, dates).then((response) => {",
                      "        //do something with the response",
                      "        console.log(\"invoice created - \" + JSON.stringify(response));",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteInvoice",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the invoice to delete." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.invoices.IErrorResult" ] },
            "doc": "Fulfilled - The result of invoice delete by the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "invoices.js",
              "lineno": 149 } ],
        "docs":
          { "summary": "Delete invoice by ID.",
            "description":
              [ "The `deleteInvoice()` function returns a Promise that resolves to IErrorResult",
                " for delete operation by given ID." ],
            "links": [],
            "examples":
              [ { "title": "Delete invoice by ID",
                  "body":
                    [ "import wixCrmBackend from 'wix-crm-backend';",
                      "",
                      "export function deleteInvoice(id) {",
                      "  return wixCrmBackend.invoices.deleteInvoice(id);",
                      "};",
                      "",
                      "function deleteInvoiceExample(id) {",
                      "  deleteInvoice(id).then((errorResult) => {",
                      "    //do something with the response",
                      "    console.log(\"delete invoice result - \" + JSON.stringify(errorResult));",
                      "  });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getInvoice",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the invoice to get." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.invoices.IInvoice" ] },
            "doc": "Fulfilled - The invoice with the given ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "invoices.js",
              "lineno": 90 } ],
        "docs":
          { "summary": "Gets an existing invoice by ID.",
            "description":
              [ "The `getInvoice()` function returns a Promise that resolves to invoice",
                " whose ID matches the given ID." ],
            "links": [],
            "examples":
              [ { "title": "Get invoice by ID",
                  "body":
                    [ "import wixCrmBackend from 'wix-crm-backend';",
                      "",
                      "export function getInvoice(id) {",
                      "    return wixCrmBackend.invoices.getInvoice(id);",
                      "};",
                      "",
                      "function getInvoiceExample(id) {",
                      "    getInvoice(id).then((invoice) => {",
                      "        //do something with the invoice",
                      "        console.log(\"get invoice result - \" + JSON.stringify(invoice));",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateInvoice",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "createInvoiceRequest",
              "type": "IUpdateInvoiceRequest",
              "doc": "The data required for invoice update." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.invoices.IResponse" ] },
            "doc": "Fulfilled - The result of invoice update, holding the updated ID.\nRejected - Error message." },
        "locations":
          [ { "filename": "invoices.js",
              "lineno": 59 } ],
        "docs":
          { "summary": "Update an existing invoice.",
            "description":
              [ "The `updateInvoice()` function returns a Promise that resolves to the updated invoice",
                " ID." ],
            "links": [],
            "examples":
              [ { "title": "Update existing invoice",
                  "body":
                    [ "import wixCrmBackend from 'wix-crm-backend';",
                      "",
                      "export function updateInvoice(id, customer, currency, lineItems, discount, payments, metadata, dates) {",
                      "    const updateInvoiceRequest = {",
                      "        id: id,",
                      "        data: {",
                      "            customer: customer,",
                      "            currency: currency,",
                      "            lineItems: lineItems,",
                      "            discount: discount,",
                      "            payments: payments,",
                      "            metadata: metadata,",
                      "            dates: dates",
                      "        }",
                      "    };",
                      "",
                      "    return wixCrmBackend.invoices.updateInvoice(updateInvoiceRequest);",
                      "};",
                      "",
                      "function updateInvoiceExample(id) {",
                      "    wixCrmBackend.invoices.getInvoice(id).then((invoice) => {",
                      "        //do something with the invoice",
                      "",
                      "        let metadata = invoice.metadata;",
                      "        metadata.notes = \"new note\";",
                      "",
                      "        updateInvoice(invoice.id, invoice.customer, invoice.currency, invoice.lineItems, invoice.discount, invoice.payments, metadata, invoice.dates).then((response) => {",
                      "            //do something with the response",
                      "            console.log(response);",
                      "        })",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }