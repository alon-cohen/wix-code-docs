{ "name": "wix-captcha-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "authorise-token.js",
      "lineno": 23 },
  "docs":
    { "summary": "The wix-captcha-backend module contains functionality for working with\n the captcha element from backend code.",
      "description": "The captcha element allows you to present a challenge-response test\n to site visitors to determine whether they are human or a bot. Use the captcha\n element to verify that site visitors are human before allowing them perform\n restricted operations.\n\n For more information on working with your captcha element, click here (link to tutorial).\n\n To use the Captcha API, import `wixCaptcha` from the `wix-captcha-backend` module:\n\n   ```javascript\n   import wixCaptcha from 'wix-captcha-backend';\n   ```",
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "authorize",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "token",
              "type": "string",
              "doc": "The captcha token to authorize." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-captcha-backend.SuccessReport" ] },
            "doc": "Fulfilled - A success message." },
        "locations":
          [ { "lineno": 52,
              "filename": "authorise-token.js" } ],
        "docs":
          { "summary": "Authorize the captcha token.",
            "description":
              [ "Following Captcha verification on the client side, you must authorize",
                " the generated captcha token in the backend. `authorize()` checks if the token",
                " is valid, thereby making sure it was not tampered or timed out.",
                "",
                " The `authorize()` function returns a Promise that resolves to a [`Success`](wix-captcha-backend.html#SuccessResponse)",
                " object when the token is authorized.",
                "",
                " To understand how `authorize()` is used in a typical Captcha validation lifecycle,",
                " click [`here`]($w.Captcha.html#captcha-lifecycle)." ],
            "links": [],
            "examples":
              [ { "title": "Full captcha lifecycle scenario",
                  "body":
                    [ "/******************************",
                      " * backend code - captcha.jsw *",
                      " ******************************/",
                      "",
                      "import wixCaptcha from 'wix-captcha-backend';",
                      "import wixData from 'wix-data';",
                      "",
                      "// Authorize token and insert data",
                      "export function processSubmission(submitRequest) {",
                      "  return wixCaptcha.authorize(submitRequest.token)",
                      "    .then (() => {",
                      "      return wixData.insert(\"MyCollection\", submitRequest.data);",
                      "    });",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {processSubmission} from 'backend/captcha';",
                      "",
                      "$w.onReady(function () {",
                      "  // When user clicks submit button",
                      "  $w(\"#submitDataButton\").onClick(() =>",
                      "    let submitRequest = {",
                      "      token: $w(\"#myCaptcha\").token,",
                      "      data: $w(\"#myInput\").value,",
                      "    }",
                      "    processSubmission(submitRequest) // Call backend function",
                      "      .then( () => {",
                      "        $w(\"#myCaptcha\").reset();",
                      "        $w(\"#submitDataButton\").disable();",
                      "        $w(\"#messageText\").text = \"Data successfully submitted\";",
                      "        $w(\"#messageText\").show;",
                      "      })",
                      "      .catch( () => {",
                      "        $w(\"#myCaptcha\").reset();",
                      "        $w(\"#submitDataButton\").disable();",
                      "        $w(\"#messageText\").text = \"Something went wrong. Redo the Captcha challenge.\";",
                      "        $w(\"#messageText\").show;",
                      "      })",
                      "  }",
                      "",
                      "  // Error handler",
                      "  $w(\"#myCaptcha\").onError(() => {",
                      "    $w(\"#myCaptcha\").reset();",
                      "    $w(\"#messageText\").text = \"Something went wrong. Redo the Captcha challenge.\";",
                      "    $w(\"#messageText\").show;",
                      "  })",
                      "",
                      "  // Verification handler",
                      "  $w(\"#myCaptcha\").onVerified(() => {",
                      "    $w(\"#submitDataButton\").enable();",
                      "    $w(\"#messageText\").hide();",
                      "  })",
                      "",
                      "  // Timeout handler",
                      "  $w(\"#myCaptcha\").onTimeout(() => {",
                      "    $w(\"#submitDataButton\").disable();",
                      "  })",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to use captcha to protect data submission. The submit button\n is disabled until the site visitor completes the captcha challenge and the captcha is verified.\n Clicking the submit button triggers backend authorization of the token. If\n authorization is successful, the data is inserted into the collection." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "SuccessReport",
        "locations":
          [ { "lineno": 43,
              "filename": "authorise-token.js" } ],
        "docs":
          { "summary": "An object representing a captcha authorization success message.",
            "links":
              [ "[authorize( )](wix-captcha-backend.html#authorize)" ],
            "examples":
              [ { "title": "Authorize captcha token and show result",
                  "body":
                    [ "/******************************",
                      " * backend code - captcha.jsw *",
                      " ******************************/",
                      "",
                      "import wixCaptcha from 'wix-captcha-backend';",
                      "",
                      "export function captchaAuthorize(token) {",
                      "  return wixCaptcha.authorize(token);",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {captchaAuthorize} from 'backend/captcha';",
                      "",
                      "export function myButton_click(event, $w) {",
                      "  let myToken = $w(\"#myCaptcha\").token",
                      "",
                      "  captchaAuthorize(myToken)",
                      "    .then( (result) => {",
                      "      console.log (result); // {success: true}",
                      "    })",
                      "    .catch(() => {",
                      "      $w(\"#myCaptcha\").reset();",
                      "      $w(\"#messageText\").text = \"Something went wrong. Redo the Captcha challenge.\";",
                      "      $w(\"#messageText\").show;",
                      "    })",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "success",
              "type": "string",
              "doc": "Value is `true` when authorization is successful." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] } ],
  "extra":
    {  } }