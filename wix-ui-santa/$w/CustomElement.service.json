{ "name": "CustomElement",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin" ],
  "labels": [],
  "location":
    { "lineno": 5,
      "filename": "CustomElement.js" },
  "docs":
    { "summary": "An API for rendering a custom element.",
      "description":
        [ "A custom element is a reusable element that you define in a JavaScript file ",
          " hosted separately.  The custom element is defined using standard ECMAScript 2015 class syntax. ",
          "",
          " **Note:** This reference provides basic instructions for creating custom elements. For full instructions and examples, see the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/Web_Components). ",
          "",
          " You might want to use a custom element to: ",
          "",
          "",
          " + Design your own elements with additional CSS capabilities.",
          " + Change the height of your element dynamically. ",
          " + Code elements with reusable capabilities without their code colliding. ",
          " + Improve performance (compared to iframe-based components). This largely depends on the implementation of the custom element.",
          "",
          "",
          " To work with custom elements, do the following: ",
          "",
          "",
          " 1. Code the custom element and its behavior in a static JavaScript file using any IDE. Include the following methods in your implementation: ",
          "   + `dispatchEvent()`. The [`dispatchEvent()`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent) method defines the event that will trigger activity on your site. The Corvid API [`on()`](https://www.wix.com/corvid/reference/$w.CustomElement.html#on) event handler registers the event. ",
          "   + `customElements.define(name, class)`.  This [`define()`](https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry/define) method registers the custom element. Enter the registered name as the tag name when adding the custom element to the site in the Editor. ",
          " 1. Host the JavaScript file on your own server. ",
          " 1. In the Wix Editor, add a custom element to the site. In the custom element's Settings panel: ",
          "   + Enter the URL of the server hosting the custom element's JavaScript file. ",
          "   + Enter the registered name of the element as the tag name. ",
          "     The registered name is set using the `define()` method ",
          "     in the custom element's implementation, as mentioned above.",
          " 1. Use Corvid to code event handling and additional functionality for the custom element. ",
          "",
          "Custom elements support SEO with coding in Corvid. See [`seoMarkup`](https://www.wix.com/corvid/reference/$w.CustomElement.html#seoMarkup).",
          "",
          " See [this article](https://support.wix.com/en/article/adding-code-to-your-site) for a comparison about when to use custom elements, iframe-based components, and other methods for adding code to your site.",
          "    ",
          " Limitations",
          " + Custom elements are supported only for premium Wix users on sites with their own domain.",
          " + Layout for custom elements might appear differently when viewing in the Editor, when previewing, and  on the live site after publishing." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "seoMarkup",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 111,
              "filename": "CustomElement.js" } ],
        "docs":
          { "summary": "Sets or gets the SEO markup to be rendered for search engine bots.",
            "description":
              [ "The custom element's SEO markup is a meta tag. It provides potential site visitors with a summary of what the custom element is about. It is not visible to users, but is used by bots to generate search results." ],
            "links": [],
            "examples":
              [ { "title": "Define and use a custom element",
                  "body":
                    [ "// **********************************************",
                      "// Custom Element Code in Corvid ",
                      "// **********************************************",
                      "",
                      "$w.onReady(function () {",
                      "",
                      "  // Sets the value of an attribute in the custom element. ",
                      "  $w('#myCustomElement').setAttribute('isLoggedIn', wixUsers.currentUser.loggedIn);",
                      "",
                      "  // Handle an event on the custom element.  ",
                      "  $w('#myCustomElement').on('my-event', <do something> );",
                      "",
                      "  // Get or set the SEO markup to be rendered by search engines",
                      "  $w('#myCustomElement).seoMarkup = ‘<div>logged in status</div>’;",
                      "",
                      "});",
                      "",
                      "// **********************************************",
                      "// Custom Element Implementation on an HTML Page",
                      "// **********************************************",
                      "",
                      "class MyElement extends HTMLElement {",
                      "",
                      "  // Define a special callback function that runs when ",
                      "  // the custom element is connected initially to the DOM. ",
                      "  connectedCallback() {",
                      "",
                      "    this.innerHTML = 'Hello world!'",
                      "",
                      "    // Trigger an event that Corvid can watch for and handle ",
                      "    // using the [`on()`](https://www.wix.com/corvid/reference/$w.IFrame.html#global) function.",
                      "    this.dispatchEvent(new CustomEvent('my-event')",
                      "  }",
                      "}",
                      "",
                      "// Register the custom element. The name \"my-custom-element\" is the ",
                      "// tag name to specify when adding the custom element in the Wix ",
                      "// Editor to the site.",
                      "customElements.define('my-custom-element', MyElement);",
                      "  ",
                      "// **********************************************",
                      "// HTML Result",
                      "// **********************************************",
                      "<my-custom-element data=”Hello world!”>inner html</my-custom-element>",
                      "",
                      "// **********************************************",
                      "// HTML Result (Search Engine Bot)",
                      "// **********************************************",
                      "<my-custom-element><div>Hello World!</div></<my-custom-element>>" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "on",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventName",
              "type": "string",
              "doc": "The name of the event." },
            { "name": "callBackFunction",
              "type": "Function",
              "doc": "The callback function to run when the event is triggered." } ],
        "ret":
          { "type": "$w.CustomElement",
            "doc": "The custom element." },
        "locations":
          [ { "lineno": 80,
              "filename": "CustomElement.js" } ],
        "docs":
          { "summary": "Registers an event handler on the custom element.",
            "description":
              [ "The `on()` function registers an event handler based on the [`this.dispatchEvent()`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent) in the custom element's implementation. ",
                "",
                " The `on()` function enables the custom element to affect the rendering of the site. ",
                "",
                " The code snippets below demonstrate how to define a `my-event` event in the custom element's implementation and how to refer to it from Corvid.",
                "",
                " ![on-event](images/customElement_on.png \"On Event\")" ],
            "links": [],
            "examples":
              [ { "title": "Define and use a custom element",
                  "body":
                    [ "// **********************************************",
                      "// Custom Element Code in Corvid ",
                      "// **********************************************",
                      "",
                      "$w.onReady(function () {",
                      "",
                      "  // Sets the value of an attribute in the custom element. ",
                      "  $w('#myCustomElement').setAttribute('isLoggedIn', wixUsers.currentUser.loggedIn);",
                      "",
                      "  // Handle an event on the custom element.  ",
                      "  $w('#myCustomElement').on('my-event', <do something> );",
                      "",
                      "  // Get or set the SEO markup to be rendered by search engines",
                      "  $w('#myCustomElement).seoMarkup = ‘<div>logged in status</div>’;",
                      "",
                      "});",
                      "",
                      "// **********************************************",
                      "// Custom Element Implementation on an HTML Page",
                      "// **********************************************",
                      "",
                      "class MyElement extends HTMLElement {",
                      "",
                      "  // Define a special callback function that runs when ",
                      "  // the custom element is connected initially to the DOM. ",
                      "  connectedCallback() {",
                      "",
                      "    this.innerHTML = 'Hello world!'",
                      "",
                      "    // Trigger an event that Corvid can watch for and handle ",
                      "    // using the [`on()`](https://www.wix.com/corvid/reference/$w.IFrame.html#global) function.",
                      "    this.dispatchEvent(new CustomEvent('my-event')",
                      "  }",
                      "}",
                      "",
                      "// Register the custom element. The name \"my-custom-element\" is the ",
                      "// tag name to specify when adding the custom element in the Wix ",
                      "// Editor to the site.",
                      "customElements.define('my-custom-element', MyElement);",
                      "  ",
                      "// **********************************************",
                      "// HTML Result",
                      "// **********************************************",
                      "<my-custom-element data=”Hello world!”>inner html</my-custom-element>",
                      "",
                      "// **********************************************",
                      "// HTML Result (Search Engine Bot)",
                      "// **********************************************",
                      "<my-custom-element><div>Hello World!</div></<my-custom-element>>" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setAttribute",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "The name of the attribute." },
            { "name": "value",
              "type": "void",
              "doc": "The value of the attribute." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 56,
              "filename": "CustomElement.js" } ],
        "docs":
          { "summary": "Sets an attribute for the custom element.",
            "description":
              [ "We can use `setAttribute()` to affect the custom element's definition and defined behavior. Consider it a way for Corvid to pass information to the custom element based on the context of the site. ",
                "",
                "Each `setAttribute()` function sets one attribute at a time using a key-value pair. Use multiple functions to set more than one attribute. ",
                "",
                "If the custom element does not yet have the attribute, `setAttribute()` creates it." ],
            "links": [],
            "examples":
              [ { "title": "Define and use a custom element",
                  "body":
                    [ "// **********************************************",
                      "// Custom Element Code in Corvid ",
                      "// **********************************************",
                      "",
                      "$w.onReady(function () {",
                      "",
                      "  // Sets the value of an attribute in the custom element. ",
                      "  $w('#myCustomElement').setAttribute('isLoggedIn', wixUsers.currentUser.loggedIn);",
                      "",
                      "  // Handle an event on the custom element.  ",
                      "  $w('#myCustomElement').on('my-event', <do something> );",
                      "",
                      "  // Get or set the SEO markup to be rendered by search engines",
                      "  $w('#myCustomElement).seoMarkup = ‘<div>logged in status</div>’;",
                      "",
                      "});",
                      "",
                      "// **********************************************",
                      "// Custom Element Implementation on an HTML Page",
                      "// **********************************************",
                      "",
                      "class MyElement extends HTMLElement {",
                      "",
                      "  // Define a special callback function that runs when ",
                      "  // the custom element is connected initially to the DOM. ",
                      "  connectedCallback() {",
                      "",
                      "    this.innerHTML = 'Hello world!'",
                      "",
                      "    // Trigger an event that Corvid can watch for and handle ",
                      "    // using the [`on()`](https://www.wix.com/corvid/reference/$w.IFrame.html#global) function.",
                      "    this.dispatchEvent(new CustomEvent('my-event')",
                      "  }",
                      "}",
                      "",
                      "// Register the custom element. The name \"my-custom-element\" is the ",
                      "// tag name to specify when adding the custom element in the Wix ",
                      "// Editor to the site.",
                      "customElements.define('my-custom-element', MyElement);",
                      "  ",
                      "// **********************************************",
                      "// HTML Result",
                      "// **********************************************",
                      "<my-custom-element data=”Hello world!”>inner html</my-custom-element>",
                      "",
                      "// **********************************************",
                      "// HTML Result (Search Engine Bot)",
                      "// **********************************************",
                      "<my-custom-element><div>Hello World!</div></<my-custom-element>>" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }