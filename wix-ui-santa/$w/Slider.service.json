{ "name": "Slider",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.ValueMixin",
      "$w.DisabledMixin",
      "$w.HiddenCollapsedMixin",
      "$w.FocusMixin" ],
  "labels":
    [ "new" ],
  "location":
    { "filename": "Slider.js",
      "lineno": 4 },
  "docs":
    { "summary": "Sliders allow users to select a number from a given range.",
      "description":
        [ "Sliders offer your users a way of inputing a number by sliding a \"handle\" one",
          " way or the other along a track. You can set the range of values for the",
          " slider and also its default value.",
          "",
          " The slider's values can be configured in one of two ways:",
          " + Value - You define the size of the steps between values, and the slider",
          "   calculates how many steps fit in the slider's range.",
          " + Count - You define the number of steps between the values you want your",
          "   slider to have, and the slider calculates the size of each step." ],
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "max",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "Slider.js",
              "lineno": 62 } ],
        "docs":
          { "summary": "Sets or gets the slider's maximum value.",
            "links": [],
            "examples":
              [ { "title": "Get a slider's maximum value",
                  "body":
                    [ "let sliderStep = $w(\"#mySlider\").max; // 10" ] },
                { "title": "Set a slider's maximum value",
                  "body":
                    [ "$w(\"#mySlider\").max = 10;" ] } ] },
        "extra":
          {  } },
      { "name": "min",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "Slider.js",
              "lineno": 27 } ],
        "docs":
          { "summary": "Sets or gets the slider's minimum value.",
            "links": [],
            "examples":
              [ { "title": "Get a slider's minimum value",
                  "body":
                    [ "let sliderStep = $w(\"#mySlider\").min; // 0" ] },
                { "title": "Set a slider's minimum value",
                  "body":
                    [ "$w(\"#mySlider\").min = 0;" ] } ] },
        "extra":
          {  } },
      { "name": "step",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "defaultValue": "`0.1`",
        "locations":
          [ { "filename": "Slider.js",
              "lineno": 137 } ],
        "docs":
          { "summary": "Sets or gets a slider's step value.",
            "description":
              [ "The `step` property along with the [`stepType`](#stepType) determes the",
                " size of each slider step and how many step units the slider is divided into." ],
            "links": [],
            "examples":
              [ { "title": "Get a slider's step value",
                  "body":
                    [ "let sliderStep = $w(\"#mySlider\").step; // 5" ] },
                { "title": "Set a slider's step value",
                  "body":
                    [ "$w(\"#mySlider\").step = 5;" ] } ] },
        "extra":
          {  } },
      { "name": "stepType",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "defaultValue": "`\"value\"`",
        "locations":
          [ { "filename": "Slider.js",
              "lineno": 97 } ],
        "docs":
          { "summary": "Sets or gets a slider's step type.",
            "description":
              [ "The `stepType` determines how the slider's steps work:",
                "",
                " The step type can be:",
                " + `\"value\"` - Each step's size is the number of units defined by the",
                "   [`step`](#step) property's value. For example, suppose a slider has a",
                "   [`min`](#min) value of `0`, [`max`](#max) value of `10`, and",
                "   [`step`](#step) value of `5`. Each step's size will be 5 units, meaning",
                "   there will be 2 steps.",
                " + `\"count\"` - The number of steps is determined by number the units",
                "   in the [`step`](#step) property's value. For example, suppose a slider",
                "   has a [`min`](#min) value of `0`, [`max`](#max) value of `10`, and",
                "   [`step`](#step) value of `5`. There will be 5 steps, meaning each step",
                "   will be 2 units." ],
            "links": [],
            "examples":
              [ { "title": "Get a slider's step type",
                  "body":
                    [ "let sliderStepType = $w(\"#mySlider\").stepType; // \"count\"" ] },
                { "title": "Set a slider's step type",
                  "body":
                    [ "$w(\"#mySlider\").stepType = \"count\";" ] } ] },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }