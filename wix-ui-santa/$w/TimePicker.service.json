{ "name": "TimePicker",
  "memberOf": "$w",
  "mixes":
    [ "$w.FocusMixin",
      "$w.DisabledMixin",
      "$w.HiddenCollapsedMixin",
      "$w.RequiredMixin",
      "$w.ReadOnlyMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "TimePicker.js",
      "lineno": 10 },
  "docs":
    { "summary": "An input element for capturing the time of day.",
      "description":
        [ "Time pickers allow users to easily enter a time of day. The time format is",
          " a string representation of 24-hour time, such as `\"16:00\"`." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "step",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "TimePicker.js",
              "lineno": 120 } ],
        "docs":
          { "summary": "Sets or gets the number of minutes the time picker steps.",
            "description":
              [ "Setting the `step` property defines the stepping behavior of the time picker.",
                " The stepping behavior is also dependent on the input option type chosen",
                " in the **Time Input Settings** panel in the Editor.",
                "",
                " ![TimePicker Input Options](images/time_picker_input_options.png \"TimePicker input options\")",
                "",
                " The following list enumerates the stepping behavior for each input option:",
                "",
                " + **Text only:** When input focus is on the minutes, the keyboard up and",
                "   down arrows increment and decrement the minutes by the `step` value.",
                "   When the input focus is on the hours, the hour increments and decrements",
                "   by 1 hour, regardless of the `step` value.",
                " + **Stepper:** The stepper buttons increment and decrement the minutes by",
                "   the `step` value. When the input focus is on the hours, the hour increments",
                "   and decrements by 1 hour, regardless of the `step` value. The keyboard up",
                "   and down arrows work as above.",
                " + **Dropdown:** The dropdown contains times where the difference between each",
                "   time is the `step` value in minutes. For example, if the `step` value is",
                "   `10`, the dropdown will contain `11:00`, `11:10`, `11:20`, etc.",
                "",
                " Set the `step` value to a number between 1 and 60.",
                "",
                " You can also set an element's `step` property in the Editor using the Settings panel.",
                "",
                " Getting the `step` property returns the current step value." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "useAmPmFormat",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "filename": "TimePicker.js",
              "lineno": 190 } ],
        "docs":
          { "summary": "Sets or gets whether the time picker uses 12-hour or 24-hour format.",
            "description":
              [ "The `useAmPmFormat` only affects the display format. A time picker always",
                " uses the 24-hour format for its [`value`](#value).",
                "",
                " The `useAmPmFormat` property can be:",
                "",
                " + `true`: Displays a 12-hour time along with AM/PM indication. For example,",
                "   **04:00 PM**.",
                " + `false`: Displays a 24-hour time. For example, **16:00**.",
                "",
                " You can also set an element's `useAmPmFormat` property in the Editor using the Settings panel." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }