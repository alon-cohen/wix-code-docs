{ "name": "ProgressBar",
  "memberOf": "$w",
  "mixes":
    [ "$w.FocusMixin",
      "$w.DisabledMixin",
      "$w.HiddenCollapsedMixin",
      "$w.Element",
      "$w.StyleMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "ProgressBar.js",
      "lineno": 9 },
  "docs":
    { "summary": "An element for displaying the status of an ongoing process.",
      "description":
        [ "A progress bar provides a way to indicate the current stage or percentage complete",
          "of process. For example, it can be used to show progress when a site visitor is",
          "completing a multi-step form." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "style",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.Style",
        "locations":
          [ { "filename": "ProgressBar.js",
              "lineno": 27 } ],
        "docs":
          { "summary": "Gets an object containing information about the progress bar's styles.",
            "description":
              [ "The following styles can be used with progress bars:",
                "",
                " + [`backgroundColor`]($w.Style.html#backgroundColor)",
                " + [`foregroundColor`]($w.Style.html#foregroundColor)",
                " + [`borderColor`]($w.Style.html#borderColor)",
                " + [`borderWidth`]($w.Style.html#borderWidth)" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "Not all styles can be used on all progress bar designs. To determine which styles\n work with a specific progress design, go to the **Progress Design** panel in\n the Editor, choose a design, and click **Customize Design**. The design\n options that you see in the **Progress Design** panel for your particular\n box are the styles you can use in your code." ] } },
      { "name": "targetValue",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "ProgressBar.js",
              "lineno": 122 } ],
        "docs":
          { "summary": "Sets or gets a progress bar's target value.",
            "description":
              [ "Setting the `targetValue` property sets the value at which the progress is complete.",
                "",
                " Getting the `targetValue` property gets the value at which the progress is complete." ],
            "links": [],
            "examples":
              [ { "title": "Get a progress bar's value",
                  "body":
                    [ "let target = $w(\"#myProgressBar\").targetValue; // 150" ],
                  "extra":
                    {  } },
                { "title": "Set a progress bar's value",
                  "body":
                    [ "$w(\"#myProgressBar\").targetValue = 150;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "value",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "ProgressBar.js",
              "lineno": 53 } ],
        "docs":
          { "summary": "Sets or gets the progress value.",
            "description":
              [ "Setting the `value` property sets the current value for the progress bar",
                " and updates the displayed progress indication to reflect the progress as",
                " a percentage of the [`targetValue`](#targetValue).",
                "",
                " The `value` property can be set to any positive number. Setting `value`",
                " to a number greater than [`targetValue`](#targetValue) can be used to",
                " indicate that a goal amount has been surpassed.",
                "",
                " Getting the `value` property returns the current value." ],
            "links": [],
            "examples":
              [ { "title": "Get a progress bar's value",
                  "body":
                    [ "let progressValue = $w(\"#myProgressBar\").value; // 42" ],
                  "extra":
                    {  } },
                { "title": "Set a progress bar's value",
                  "body":
                    [ "$w(\"#myProgressBar\").value = 42;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "If an element is connected to a dataset, setting the element's `value`\n in code does not set the value of the connected field in the dataset.\n That means if you use the dataset to perform a submit, the value changed\n in code is not reflected in the submitted item.\n\n To submit the new value using a dataset, set the field's value using the\n [`setFieldValue()`](wix-dataset.html#setFieldValue) function before\n performing the submit." ] } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }