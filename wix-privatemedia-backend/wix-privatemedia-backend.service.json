{ "name": "wix-privatemedia-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "uploader.js",
      "lineno": 2 },
  "docs":
    { "summary": "The wix-privatemedia-backend module contains functionality for working with\n the media that is stored in your site's <a href=\"https://support.wix.com/en/article/about-the-media-manager-568956\" target=\"_blank\">Media Manager</a>.",
      "description":
        [ "To use the Private Media API, import `wixPrivateMedia` from the `wix-privatemedia-backend` module:",
          "",
          "   ```javascript",
          "   import wixPrivateMedia from 'wix-privatemedia-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "getFileInfo",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "The Media Manager name of the file to get the information for." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileInfo" ] },
            "doc": "Fulfilled - Information about the file." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 271 } ],
        "docs":
          { "summary": "Gets a file's information from the Media Manager.",
            "description":
              [ "The `getFileInfo()` function returns a Promise that resolves to information about",
                " the specified file." ],
            "links": [],
            "examples":
              [ { "title": "Get a file's information",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "",
                      "export async function getFileInfo(fileName) {",
                      "  return wixPrivateMedia.getFileInfo(fileName);",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * {",
                      " *   fileName: \"43io8d_4pf9jwff83ec478a811fe3f714a9c869\"",
                      " *   mediaType: \"video\"",
                      " *   isPrivate: false",
                      " *   sizeInBytes: 383631",
                      " *   mimeType: \"video/mp4\"",
                      " *   iconUrl: \"media/43io8d_4pf9jwff83ec478a811fe3f714a9c869f002.jpg\"",
                      " *   fileUrl: \"video/43io8d_4pf9jwff83ec478a811fe3f714a9c869/file\"",
                      " *   originalFileName: \"example.mp4\"",
                      " *   hash: \"a3ac7ddabb263c2d00b73e8177d15c8d\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getFileUrl",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "The Media Manager name of the file to get a URL for." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileUrl" ] },
            "doc": "Fulfilled - The file's URL." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 311 } ],
        "docs":
          { "summary": "Gets a file's URL from the Media Manager.",
            "description":
              [ "The `getFileUrl()` function returns a Promise that resolves to the specified",
                " file's URL." ],
            "links": [],
            "examples":
              [ { "title": "Get a file's information",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "",
                      "export async function getFileInfo(fileName) {",
                      "  return wixPrivateMedia.getFileInfo(fileName);",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * {",
                      " *   fileName: \"43io8d_4pf9jwff83ec478a811fe3f714a9c869\"",
                      " *   mediaType: \"video\"",
                      " *   isPrivate: false",
                      " *   sizeInBytes: 383631",
                      " *   mimeType: \"video/mp4\"",
                      " *   iconUrl: \"media/43io8d_4pf9jwff83ec478a811fe3f714a9c869f002.jpg\"",
                      " *   fileUrl: \"video/43io8d_4pf9jwff83ec478a811fe3f714a9c869/file\"",
                      " *   originalFileName: \"example.mp4\"",
                      " *   hash: \"a3ac7ddabb263c2d00b73e8177d15c8d\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getUploadUrl",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "path",
              "type": "string",
              "doc": "The path within the Media Manager where the file will be\n uploaded. if the path does not yet exist, the missing folders will be created." },
            { "name": "options",
              "type": "wix-privatemedia-backend.GetUploadUrlOptions" } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 411 } ],
        "docs":
          { "summary": "Generates an upload URL and a corresponding upload token.",
            "description":
              [ "The `getUploadUrl()` function returns a Promise that resolves to an object",
                " containing an upload URL and a corresponding upload token.",
                "",
                " Use `getUploadUrl()` to allow an external client to upload a file to your",
                " site's Media Manager.",
                "",
                " The external client uploads a file by performing a POST operation to the",
                " returned URL using multipart/form-data encoding and sending the following data:",
                "",
                " + `upload_token`: The returned upload token,",
                " + `file`: An object containing:",
                "     + `name`: The file name.",
                "     + `content`: The content of the file.",
                "",
                " The POST will return the following:",
                "",
                "   ```javascript",
                "   {",
                "     \"id\": \"<file id>\",",
                "     \"path\": \"<file path>\",",
                "     \"mimeType\": \"<file mime type>\",",
                "     \"type\": \"<file type image|video|document|audio|shape>,",
                "     \"sizeInBytes\": 1000,",
                "     \"acl\": \"<private|public>\",",
                "     \"dateUpdated\": \"2017-02-14T15:24:17Z\",",
                "     \"dateCreated\": \"2017-02-14T15:24:17Z\"",
                "   }",
                "   ```" ],
            "links": [],
            "examples":
              [ { "title": "Get a URL and token to be used for uploading a file by POST",
                  "body":
                    [ "export function getUploadUrl() {",
                      "  return wixPrivateMedia.getUploadUrl(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"mimeType\": \"image/jpeg\",",
                      "      \"mediaType\": \"image\",",
                      "      \"isPrivate\": false,",
                      "      \"isVisitorUpload\": false,",
                      "      \"context\": {",
                      "        \"someKey1\": \"someValue1\",",
                      "        \"someKey2\": \"someValue2\"",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * {",
                      " *   uploadUrl: \"https://files.wix.com/_ah/upload/OmEXRhIgZ...\"",
                      " *   uploadToken: \"os0F1e3acdyLHSqYo-gvPlTsRX0LXRkCkHri128K...\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getVideoPlaybackUrl",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "The Media Manager name of the file to get a URL for." },
            { "name": "format",
              "type": "string",
              "doc": "The format of the URL to get. Either \"hls\" or \"dash\"." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileUrl" ] },
            "doc": "Fulfilled - The file's URL." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 343 } ],
        "docs":
          { "summary": "Gets a file's playback URL from the Media Manager.",
            "description":
              [ "The `getVideoPlaybackUrl()` function returns a Promise that resolves to the",
                " specified file's playback URL." ],
            "links": [],
            "examples":
              [ { "title": "Get a URL to be used for video playback",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "",
                      "export async function getVideoPlaybackUrl(fileName) {",
                      "  return wixPrivateMedia.getVideoPlaybackUrl(fileName, \"hls\");",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * {",
                      " *   url: \"https://repackager.wixmp.com/video.wixstatic.com/video/f6c0f9...\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "importFile",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "path",
              "type": "string",
              "doc": "The path within the Media Manager where the file will be\n uploaded. if the path does not yet exist, the missing folders will be created." },
            { "name": "url",
              "type": "string",
              "doc": "The file's URL." },
            { "name": "options",
              "type": "wix-privatemedia-backend.ImportOptions",
              "doc": "Options to use when uploading a file" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileInfo" ] },
            "doc": "Fulfilled - Information about the file that was uploaded." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 80 } ],
        "docs":
          { "summary": "Imports a file to the Media Manager from a URL.",
            "description":
              [ "The `importFile()` function returns a Promise that resolves to information",
                " about the newly imported file.",
                "",
                " When the file is imported the [`onFileUploaded()`](wix-privatemedia-backend.Events.html#onFileUploaded)",
                " event is fired.",
                "",
                " Video and audio files that have been imported are not immediately available",
                " to be used even after the Promise is resolved. Before they can be used, they",
                " must first undergo encoding. When the encoding is finished,",
                " the [`onFileUploaded()`](wix-privatemedia-backend.Events.html#onFileUploaded)",
                " event is fired a second time." ],
            "links": [],
            "examples":
              [ { "title": "Import a file",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "",
                      "export function importFile(url) {",
                      "  return wixPrivateMedia.importFile(",
                      "    \"/myImportFolder/subfolder\",",
                      "    url,",
                      "    {",
                      "      \"mimeType\": \"image/jpeg\",",
                      "      \"mediaType\": \"image\",",
                      "      \"isPrivate\": false,",
                      "      \"isVisitorUpload\": false,",
                      "      \"context\": {",
                      "        \"someKey1\": \"someValue1\",",
                      "        \"someKey2\": \"someValue2\"",
                      "      }",
                      "    } );",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {importFile} from 'backend/media';",
                      "",
                      "export function importButton_click(event) {",
                      "  importFile($w('#imageURL').value)",
                      "    .then( (result) => {",
                      "      // ..",
                      "    } );",
                      "}",
                      "",
                      "/* result is:",
                      " * {",
                      " *   fileName: \"43io8d_4pf9jwff83ec478a811fe3f714a9c869\"",
                      " *   mediaType: \"image\"",
                      " *   isPrivate: false",
                      " *   sizeInBytes: 3631",
                      " *   mimeType: \"image/jpeg\"",
                      " *   iconUrl: \"media/43io8d_4pf9jwff83ec478a811fe3f714a9c869f002.jpg\"",
                      " *   fileUrl: \"image/43io8d_4pf9jwff83ec478a811fe3f714a9c869/file\"",
                      " *   originalFileName: \"example.jpeg\"",
                      " *   hash: \"a3ac7ddabb263c2d00b73e8177d15c8d\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "upload",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "path",
              "type": "string",
              "doc": "The path within the Media Manager where the file will be\n uploaded. if the path does not yet exist, the missing folders will be created." },
            { "name": "file",
              "type": "wix-privatemedia-backend.UploadFile",
              "doc": "The file to upload." },
            { "name": "options",
              "type": "wix-privatemedia-backend.UploadOptions",
              "doc": "Options to use when uploading a file" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileInfo" ] },
            "doc": "Fulfilled - Information about the file that was uploaded." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 173 } ],
        "docs":
          { "summary": "Uploads a file to the Media Manager.",
            "description":
              [ "The `upload()` function returns a Promise that resolves to information about",
                " the newly uploaded file.",
                "",
                " When the file is uploaded the [`onFileUploaded()`](wix-privatemedia-backend.Events.html#onFileUploaded)",
                " event is fired.",
                "",
                " Video and audio files that have been uploaded are not immediately available",
                " to be used even after the Promise is resolved. Before they can be used, they",
                " must first undergo encoding. When the encoding is finished,",
                " the [`onFileUploaded()`](wix-privatemedia-backend.Events.html#onFileUploaded)",
                " event is fired a second time." ],
            "links": [],
            "examples":
              [ { "title": "Upload a file",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "",
                      "export function uploadImage(buffer) {",
                      "  return wixPrivateMedia.upload(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"name\": \"myFileName.jpg\",",
                      "      \"mimeType\": \"image/jpeg\",",
                      "      \"mediaType\": \"image\",",
                      "      \"content\": buffer",
                      "    }, {",
                      "      \"isPrivate\": false,",
                      "      \"isVisitorUpload\": false,",
                      "      \"context\": {",
                      "        \"someKey1\": \"someValue1\",",
                      "        \"someKey2\": \"someValue2\"",
                      "       }",
                      "    } );",
                      " }" ],
                  "extra":
                    {  } },
                { "title": "Upload a file from a URL",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "import rp from 'request-promise';",
                      "",
                      "export function uploadImage(url) {",
                      "  return rp.get({ url, encoding: null })",
                      "    .then( (image) => {",
                      "      return wixPrivateMedia.upload(",
                      "        \"/myUploadFolder/subfolder\",",
                      "        {",
                      "          \"name\": \"myFileName.jpg\",",
                      "          \"mimeType\": \"image/jpeg\",",
                      "          \"mediaType\": \"image\",",
                      "          \"content\": image",
                      "        }, {",
                      "          \"isPrivate\": false,",
                      "          \"isVisitorUpload\": false,",
                      "          \"context\": {",
                      "            \"someKey1\": \"someValue1\",",
                      "            \"someKey2\": \"someValue2\"",
                      "           }",
                      "        } );",
                      "    } );",
                      " }",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {uploadImage} from 'backend/media';",
                      "",
                      "export function uploadButton_click(event) {",
                      "  uploadImage($w('#imageURL').value)",
                      "    .then( (result) => {",
                      "      // ..",
                      "    } );",
                      "}",
                      "",
                      "/* result is:",
                      " * {",
                      " *   fileName: \"43io8d_4pf9jwff83ec478a811fe3f714a9c869\"",
                      " *   mediaType: \"image\"",
                      " *   isPrivate: false",
                      " *   sizeInBytes: 3631",
                      " *   mimeType: \"image/jpeg\"",
                      " *   iconUrl: \"media/43io8d_4pf9jwff83ec478a811fe3f714a9c869f002.jpg\"",
                      " *   fileUrl: \"image/43io8d_4pf9jwff83ec478a811fe3f714a9c869/file\"",
                      " *   originalFileName: \"example.jpeg\"",
                      " *   hash: \"a3ac7ddabb263c2d00b73e8177d15c8d\"",
                      " * }",
                      " */",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to upload a file using a custom upload button.\n It assumes you have a regular button on your page wired to an event handler.\n\n It also assumes that you have\n <a href=\"https://support.wix.com/en/article/wix-code-how-to-manage-external-code-libraries-with-the-package-manager#installing-a-new-package\" target=\"_blank\">installed</a> the\n **request-promise** node module to your site. The example uses **request-promise**\n to create a Buffer containing the contents of the file to upload." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "FileInfo",
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 240 } ],
        "docs":
          { "summary": "An object containing information about the file that was uploaded.",
            "links":
              [ "[getFileInfo( )](#getFileInfo)",
                "[upload( )](#upload)",
                "[importFile( )](#importFile)" ],
            "examples":
              [ { "title": "A file info object",
                  "body":
                    [ "{",
                      "  \"fileName\": \"43io8d_4pf9jwff83ec478a811fe3f714a9c869\"",
                      "  \"mediaType\": \"video\"",
                      "  \"isPrivate\": false",
                      "  \"sizeInBytes\": 383631",
                      "  \"mimeType\": \"video/mp4\"",
                      "  \"iconUrl\": \"media/43io8d_4pf9jwff83ec478a811fe3f714a9c869f002.jpg\"",
                      "  \"fileUrl\": \"video/43io8d_4pf9jwff83ec478a811fe3f714a9c869/file\"",
                      "  \"originalFileName\": \"example.mp4\"",
                      "  \"hash\": \"a3ac7ddabb263c2d00b73e8177d15c8d\"",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "fileName",
              "type": "string",
              "doc": "File name of the file that was uploaded. This name\n is used when calling the [`getFileInfo()`](#getFileInfo), [`getFileUrl()`](#getFileUrl),\n and [`getVideoPlaybackUrl()`](#getVideoPlaybackUrl) functions." },
            { "name": "mediaType",
              "type": "string",
              "doc": "Type of the file that was uploaded.\n One of:\n\n + `\"audio\"`\n + `\"document\"`\n + `\"image\"``\n + `\"shape\"`\n + `\"video\"`" },
            { "name": "sizeInBytes",
              "type": "number",
              "doc": "Size of the uploaded file in bytes." },
            { "name": "isPrivate",
              "type": "boolean",
              "doc": "Whether the link to the uploaded file is\n public or private. Private links require a token to be used." },
            { "name": "mimeType",
              "type": "string",
              "doc": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\" target=\"_blank\">Mime type</a> of\n the uploaded file." },
            { "name": "iconUrl",
              "type": "string",
              "doc": "URL of the file's icon." },
            { "name": "fileUrl",
              "type": "string",
              "doc": "URL of the file." },
            { "name": "originalFileName",
              "type": "string",
              "doc": "Name of the uploaded file. This is the name\n that appears in the Media Manager." },
            { "name": "hash",
              "type": "string",
              "doc": "File hash." },
            { "name": "labels",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of labels assigned to the file by the Media Manager." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FileUrl",
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 303 } ],
        "docs":
          { "summary": "An object representing a file's URL.",
            "links":
              [ "[getFileUrl( )](#getFileUrl)",
                "[getVideoPlaybackUrl( )](#getVideoPlaybackUrl)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "url",
              "type": "string",
              "doc": "The file's URL." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ImportOptions",
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 53 } ],
        "docs":
          { "summary": "An object representing options to use when importing a file.",
            "links":
              [ "[importFile( )](#importFile)" ],
            "examples":
              [ { "title": "Import a file",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "",
                      "export function importFile(url) {",
                      "  return wixPrivateMedia.importFile(",
                      "    \"/myImportFolder/subfolder\",",
                      "    url,",
                      "    {",
                      "      \"mimeType\": \"image/jpeg\",",
                      "      \"mediaType\": \"image\",",
                      "      \"isPrivate\": false,",
                      "      \"isVisitorUpload\": false,",
                      "      \"context\": {",
                      "        \"someKey1\": \"someValue1\",",
                      "        \"someKey2\": \"someValue2\"",
                      "      }",
                      "    } );",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {importFile} from 'backend/media';",
                      "",
                      "export function importButton_click(event) {",
                      "  importFile($w('#imageURL').value)",
                      "    .then( (result) => {",
                      "      // ..",
                      "    } );",
                      "}",
                      "",
                      "/* result is:",
                      " * {",
                      " *   fileName: \"43io8d_4pf9jwff83ec478a811fe3f714a9c869\"",
                      " *   mediaType: \"image\"",
                      " *   isPrivate: false",
                      " *   sizeInBytes: 3631",
                      " *   mimeType: \"image/jpeg\"",
                      " *   iconUrl: \"media/43io8d_4pf9jwff83ec478a811fe3f714a9c869f002.jpg\"",
                      " *   fileUrl: \"image/43io8d_4pf9jwff83ec478a811fe3f714a9c869/file\"",
                      " *   originalFileName: \"example.jpeg\"",
                      " *   hash: \"a3ac7ddabb263c2d00b73e8177d15c8d\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "mimeType",
              "type": "string",
              "doc": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\" target=\"_blank\">Mime type</a> of\n the file to import. The specified value must match the actual mime type of\n the file's content.",
              "optional": true },
            { "name": "mediaType",
              "type": "string",
              "doc": "Type of the file to upload.\n One of:\n\n + `\"audio\"`\n + `\"document\"`\n + `\"image\"``\n + `\"shape\"`\n + `\"video\"`",
              "optional": true },
            { "name": "isPrivate",
              "type": "boolean",
              "doc": "Whether the link to the uploaded file will\n be public or private. Private links require a token to be used. Defaults to\n `false`.",
              "optional": true },
            { "name": "isVisitorUpload",
              "type": "boolean",
              "doc": "Indicates if the file was uploaded by a\n site visitor. Files uploaded by visitors are tagged in the Media Manager as\n being added by a visitor. Defaults to `true`.",
              "optional": true },
            { "name": "context",
              "type": "Object",
              "doc": "An object of key:value string pairs that is sent\n back in the [`onFileUploaded()`](wix-privatemedia-backend.Events.html#onFileUploaded)\n event.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "UploadFile",
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 136 } ],
        "docs":
          { "summary": "An object representing a file to upload.",
            "links":
              [ "[upload( )](#upload)" ],
            "examples":
              [ { "title": "Upload a file",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "",
                      "export function uploadImage(buffer) {",
                      "  return wixPrivateMedia.upload(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"name\": \"myFileName.jpg\",",
                      "      \"mimeType\": \"image/jpeg\",",
                      "      \"mediaType\": \"image\",",
                      "      \"content\": buffer",
                      "    }, {",
                      "      \"isPrivate\": false,",
                      "      \"isVisitorUpload\": false,",
                      "      \"context\": {",
                      "        \"someKey1\": \"someValue1\",",
                      "        \"someKey2\": \"someValue2\"",
                      "       }",
                      "    } );",
                      " }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Name of the file to upload. This name will be used in\n the Media Manager." },
            { "name": "mediaType",
              "type": "string",
              "doc": "Type of the file to upload.\n One of:\n\n + `\"audio\"`\n + `\"document\"`\n + `\"image\"``\n + `\"shape\"`\n + `\"video\"`",
              "optional": true },
            { "name": "mimeType",
              "type": "string",
              "doc": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\" target=\"_blank\">Mime type</a> of\n the file to upload. The specified value must match the actual mime type of\n the file's content.",
              "optional": true },
            { "name": "content",
              "type": "Buffer",
              "doc": "Buffer containing the content to be uploaded." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UploadOptions",
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 157 } ],
        "docs":
          { "summary": "An object representing options to use when uploading a file.",
            "links":
              [ "[upload( )](#upload)" ],
            "examples":
              [ { "title": "Upload a file",
                  "body":
                    [ "/****************************",
                      " * backend code - media.jsw *",
                      " ****************************/",
                      "",
                      "import wixPrivateMedia from 'wix-privatemedia-backend';",
                      "",
                      "export function uploadImage(buffer) {",
                      "  return wixPrivateMedia.upload(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"name\": \"myFileName.jpg\",",
                      "      \"mimeType\": \"image/jpeg\",",
                      "      \"mediaType\": \"image\",",
                      "      \"content\": buffer",
                      "    }, {",
                      "      \"isPrivate\": false,",
                      "      \"isVisitorUpload\": false,",
                      "      \"context\": {",
                      "        \"someKey1\": \"someValue1\",",
                      "        \"someKey2\": \"someValue2\"",
                      "       }",
                      "    } );",
                      " }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "isPrivate",
              "type": "boolean",
              "doc": "Whether the link to the uploaded file will\n be public or private. Private links require a token to be used. Defaults to\n `false`.",
              "optional": true },
            { "name": "isVisitorUpload",
              "type": "boolean",
              "doc": "Indicates if the file was uploaded by a\n site visitor. Files uploaded by visitors are tagged in the Media Manager as\n being added by a visitor. Defaults to `true`.",
              "optional": true },
            { "name": "context",
              "type": "Object",
              "doc": "An object of key:value string pairs that is sent\n back in the [`onFileUploaded()`](wix-privatemedia-backend.Events.html#onFileUploaded)\n event.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "UploadUrl",
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 403 } ],
        "docs":
          { "summary": "An object containing information about an upload URL.",
            "links":
              [ "[getUploadUrl( )](#getUploadUrl)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "uploadUrl",
              "type": "string",
              "doc": "The URL to POST a file to." },
            { "name": "uploadToke",
              "type": "string",
              "doc": "The token to use with the file POST." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UploadUrlOptions",
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 377 } ],
        "docs":
          { "summary": "An object representing options to use when uploading a file.",
            "links":
              [ "[getUploadUrl( )](#getUploadUrl)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "mimeType",
              "type": "string",
              "doc": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\" target=\"_blank\">Mime type</a> of\n the file to import. The specified value must match the actual mime type of\n the file's content.",
              "optional": true },
            { "name": "mediaType",
              "type": "string",
              "doc": "Type of the file to upload.\n One of:\n\n + `\"audio\"`\n + `\"document\"`\n + `\"image\"``\n + `\"shape\"`\n + `\"video\"`",
              "optional": true },
            { "name": "isPrivate",
              "type": "boolean",
              "doc": "Whether the link to the uploaded file will\n be public or private. Private links require a token to be used. Defaults to\n `false`.",
              "optional": true },
            { "name": "isVisitorUpload",
              "type": "boolean",
              "doc": "Indicates if the file was uploaded by a\n site visitor. Files uploaded by visitors are tagged in the Media Manager as\n being added by a visitor. Defaults to `true`.",
              "optional": true },
            { "name": "context",
              "type": "Object",
              "doc": "An object of key:value string pairs that is sent\n back in the [`onFileUploaded()`](wix-privatemedia-backend.Events.html#onFileUploaded)\n event.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] } ],
  "extra":
    {  } }