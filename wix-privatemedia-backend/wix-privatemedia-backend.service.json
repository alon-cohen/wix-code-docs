{ "name": "wix-privatemedia-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "uploader.js",
      "lineno": 2 },
  "docs":
    { "summary": "The wix-privatemedia-backend module contains functionality for working with\n the media that is stored in your site's <a href=\"https://support.wix.com/en/article/about-the-media-manager-568956\" target=\"_blank\">Media Manager</a>.",
      "description":
        [ "To use the Private Media API, import `wixPrivateMedia` from the `wix-privatemedia-backend` module:",
          "",
          "   ```javascript",
          "   import wixPrivateMedia from 'wix-privatemedia-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "getFileInfo",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "The Media Manager name of the file to get the information for." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileInfo" ] },
            "doc": "Fulfilled - Information about the file." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 156 } ],
        "docs":
          { "summary": "Gets a file's information from the Media Manager.",
            "description":
              [ "The `getFileInfo()` function returns a Promise that resolves to information about",
                " the specified file." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getFileUrl",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "The Media Manager name of the file to get a URL for." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileUrl" ] },
            "doc": "Fulfilled - The file's URL." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 195 } ],
        "docs":
          { "summary": "Gets a file's URL from the Media Manager.",
            "description":
              [ "The `getFileUrl()` function returns a Promise that resolves to the specified",
                " file's URL." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getVideoPlaybackUrl",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "The Media Manager name of the file to get a URL for." },
            { "name": "format",
              "type": "string",
              "doc": "The format of the URL to get. Either \"hls\" or \"dash\"." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileUrl" ] },
            "doc": "Fulfilled - The file's URL." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 226 } ],
        "docs":
          { "summary": "Gets a file's playback URL from the Media Manager.",
            "description":
              [ "The `getVideoPlaybackUrl()` function returns a Promise that resolves to the",
                " specified file's playback URL." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "upload",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "path",
              "type": "string",
              "doc": "The path within the Media Manager where the file will be\n uploaded. if the path does not yet exist, the missing folders will be created." },
            { "name": "file",
              "type": "wix-privatemedia-backend.UploadFile",
              "doc": "The file to upload." },
            { "name": "options",
              "type": "wix-privatemedia-backend.UploadOptions",
              "doc": "Options to use when uploading a file" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-privatemedia-backend.FileInfo" ] },
            "doc": "Fulfilled - Information about the file that was uploaded." },
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 101 } ],
        "docs":
          { "summary": "Uploads a file to the Media Manager.",
            "description":
              [ "The `upload()` function returns a Promise that resolves to information about",
                " the newly uploaded file.",
                "",
                " Video and audio files that have been uploaded are not immediately available",
                " to be used even after the Promise is resolved. Before they can be used, they",
                " must first udergo encoding. When the encoding is finished,",
                " the [`onFileUploaded()`](wix-privatemedia-backend.Events.html#onFileUploaded)",
                " event is fired." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "FileUrl",
        "locations":
          [ { "filename": "uploader.js",
              "lineno": 187 } ],
        "docs":
          { "summary": "An object representing a file's URL.",
            "links":
              [ "[getFileUrl( )](#getFileUrl)",
                "[getVideoPlaybackUrl( )](#getVideoPlaybackUrl)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "url",
              "type": "string",
              "doc": "The file's URL." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }