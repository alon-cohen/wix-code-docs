{ "name": "wix-stores-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "filename": "products.js",
      "lineno": 6 },
  "docs":
    { "summary": "The wix-stores-backend module contains functionality for working with your\n site's store from backend code.",
      "description":
        [ "To use the Stores API, import `wixStores` from the `wix-stores-backend` module:",
          "",
          "   ```javascript",
          "   import wixStores from 'wix-stores-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "getMyCart",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores-backend.Cart" ] },
            "doc": "Fulfilled - The retrieved cart." },
        "locations":
          [ { "filename": "carts.js",
              "lineno": 166 } ],
        "docs":
          { "summary": "Gets the current site visitor's shopping cart.",
            "description":
              [ "The `getMyCart()` function returns a Promise that resolves to the current",
                " site visitor's shopping cart." ],
            "links": [],
            "examples":
              [ { "title": "Get the current site visitor's cart",
                  "body":
                    [ "import wixStores from 'wix-stores-backend'",
                      "",
                      "export function getCurrentCart() {",
                      "  return wixStores.getMyCart();",
                      "}",
                      "",
                      "/* Returned promise resolves to:",
                      "*",
                      "* {  ",
                      "*   \"_id\": \"b36eb035-635a-450e-b74d-acf86ee4dfcc\",",
                      "*   \"appliedCoupon\": {",
                      "*     \"couponId\": \"e81e9c48-f954-4044-ba64-ccfe5c103c8f\",",
                      "*     \"name\": \"Summer Sale\",",
                      "*     \"code\": \"SummerSale\",",
                      "*     \"discountValue\": \"$10.00\",",
                      "*     \"couponType\": \"MoneyOff\"",
                      "*   },",
                      "*   \"billingAddress\": {",
                      "*     \"address\": {",
                      "*         \"formatted\": \"New York, New York \\nUnited States\",",
                      "*         \"city\": \"New York\",",
                      "*         \"country\": \"USA\",",
                      "*         \"subdivision\": \"NY\"",
                      "*      },",
                      "*      \"firstName\": \"John\",",
                      "*      \"lastName\": \"Doe\"",
                      "*   },",
                      "*   \"buyerNote\": \"This is a note from the buyer.\",",
                      "*   \"buyerInfo\":{",
                      "*     \"firstName\": \"John\",",
                      "*     \"lastName\": \"Doe\",",
                      "*     \"email\": \"john.doe@somedomain.com\",",
                      "*     \"phone\": \"5555555555\",",
                      "*     \"identityType\": \"CONTACT\"",
                      "*   },",
                      "*   \"geo\": {  ",
                      "*      \"countryCode\": \"USA\",",
                      "*      \"subdivision\": \"US-NY\",",
                      "*      \"zipCode\": \"10011\"",
                      "*   },",
                      "*   \"status\": \"INCOMPLETE\",",
                      "*   \"currency\": {  ",
                      "*      \"code\": \"USD\",",
                      "*      \"symbol\": \"$\"",
                      "*   },",
                      "*   \"shippingInfo\": {  ",
                      "*      \"deliveryOption\": \"Free Shipping\",",
                      "*      \"shippingAddress\": {  ",
                      "*         \"address\": {  ",
                      "*            \"formatted\": \"New York, New York \\nUnited States\",",
                      "*            \"city\": \"New York\",",
                      "*            \"country\": \"USA\",",
                      "*            \"subdivision\": \"NY\"",
                      "*         },",
                      "*         \"firstName\": \"John\",",
                      "*         \"lastName\": \"Doe\"",
                      "*      },",
                      "*      \"pickupDetails\":null",
                      "*   },",
                      "*   \"lineItems\":[  ",
                      "*     {  ",
                      "*       \"quantity\": 1,",
                      "*       \"price\": 120,",
                      "*       \"name\": \"A product\",",
                      "*       \"productId\": \"a668ef33-f5b8-6569-d04c-1d123be68441\",",
                      "*       \"totalPrice\": 120,",
                      "*       \"lineItemType\": \"PHYSICAL\",",
                      "*       \"optionsNew\": [ ],",
                      "*       \"customTextFields\": [",
                      "*         \"title\": \"Custom Field\",",
                      "*         \"value\": \"Custom value\"",
                      "*       ],",
                      "*       \"mediaItem\": {  ",
                      "*         \"src\": \"wix:image://v1/a9ff3b_ed3b544c319b4fad9c222c791a997832.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      "*         \"type\": \"IMAGE\"",
                      "*       },",
                      "*       \"sku\": \"21554345656\",",
                      "*       \"options\": [ ],",
                      "*       \"weight\": 3",
                      "*     },",
                      "*     {  ",
                      "*       \"quantity\": 1,",
                      "*       \"price\": 25,",
                      "*       \"name\": \"Another product\",",
                      "*       \"productId\": \"1a2d7e83-4bef-31d5-09e1-3326ee271c09\",",
                      "*       \"totalPrice\": 25,",
                      "*       \"lineItemType\": \"PHYSICAL\",",
                      "*       \"optionsNew\": [  ",
                      "*         {  ",
                      "*           \"option\": \"Size\",",
                      "*           \"selection\": \"Medium\"",
                      "*         },",
                      "*         {  ",
                      "*           \"option\": \"Color\",",
                      "*           \"selection\": \"Black\"",
                      "*         }",
                      "*       ],",
                      "*       \"customTextFields\": [  ",
                      "*   ",
                      "*       ],",
                      "*       \"mediaItem\": {  ",
                      "*         \"src\": \"wix:image://v1/a9ff3b_c6158b4d41784ae8b08337a331e1de7f.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      "*         \"type\": \"IMAGE\"",
                      "*       },",
                      "*       \"sku\": \"217537123517253\",",
                      "*       \"options\": [  ",
                      "*         {  ",
                      "*           \"option\": \"Size\",",
                      "*           \"selection\": \"Medium\"",
                      "*         },",
                      "*         {  ",
                      "*           \"option\": \"Color\",",
                      "*           \"selection\": \"Black\"",
                      "*         }",
                      "*       ],",
                      "*       \"weight\": 2",
                      "*     }",
                      "*   ],",
                      "*   \"totals\": {  ",
                      "*      \"discount\": 0,",
                      "*      \"quantity\": 2,",
                      "*      \"shipping\": 0,",
                      "*      \"subtotal\": 145,",
                      "*      \"tax\": 0,",
                      "*      \"total\": 145,",
                      "*      \"weight\": 5",
                      "*   },",
                      "*   \"weightUnit\": \"LB\"",
                      "* }",
                      "*/" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getProductOptionsAvailability",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "productId",
              "type": "string",
              "doc": "The ID of the product whose availability is being checked." },
            { "name": "choices",
              "type": "wix-stores-backend.StoreProductChoices",
              "doc": "Option choices to use when checking the product's availability." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores-backend.ProductOptionsAvailability" ] },
            "doc": "Fulfilled - The availability information of the product." },
        "locations":
          [ { "filename": "products.js",
              "lineno": 51 } ],
        "docs":
          { "summary": "Gets the availability of a product based on the specified option choices.",
            "description":
              [ "The `getProductOptionsAvailability()` function returns a Promise that is resolved",
                " to a `ProductOptionsAvailability` object when the product's availability information",
                " about the product is retrieved.",
                "",
                " The information returned in the `selectedVariant` and `availableForPurchase`",
                " properties reflects the option choices passed in using the `StoreProductChoices`",
                " parameter.",
                "",
                " If the specified choices result in the selection of a single product variant,",
                " that variant is returned in the `selectedVariant` property and the `availableForPurchase`",
                " property indicates whether that product variant is available for purchase.",
                "",
                " If the specified choices do not result in the selection of a single product variant,",
                "no variant is returned in the `selectedVariant` property and the `availableForPurchase`",
                "property will be `false`." ],
            "links": [],
            "examples":
              [ { "title": "Get a product's availability information",
                  "body":
                    [ "/*****************************",
                      " * backend code - stores.jsw *",
                      " *****************************/",
                      "",
                      "import wixStores from 'wix-stores-backend';",
                      "",
                      "export function myBackendFunction(productId, choices) {",
                      "  return wixStores.getProductOptionsAvailability(productId, choices);",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "import {myFunction} from 'backend/myModule';",
                      "",
                      "// ...",
                      "",
                      "let productId = // get product ID",
                      "let choices = {",
                      "  \"Size\": \"Large\"",
                      "};",
                      "",
                      "myBackendFunction(productId, choices)",
                      "  .then( (availability) => {",
                      "      let available = availability.availableForPurchase;  // false",
                      "      let options = availability.productOptions;          // see below",
                      "      let mainMedia = availability.mainMedia;",
                      "      let mediaItems = availability.mediaItems;",
                      "      let selectedVariant = availability.selectedVariant; // null",
                      "  } )",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  } );",
                      "",
                      "/*",
                      " * options:",
                      " *",
                      " * \"Size\": {",
                      " *   \"optionType\": \"drop_down\",",
                      " *   \"name\": \"Size\",",
                      " *   \"choices\": [",
                      " *     {",
                      " *       \"value\": \"Small\",",
                      " *       \"description\": \"Small\",",
                      " *       \"inStock\": true,",
                      " *       \"visible\": true",
                      " *     },",
                      " *     {",
                      " *       \"value\": \"Large\",",
                      " *       \"description\": \"Large\",",
                      " *       \"inStock\": true,",
                      " *       \"visible\": true",
                      " *     }",
                      " *   ]",
                      " * },",
                      " * \"Color\": {",
                      " *   \"optionType\": \"color\",",
                      " *   \"name\": \"Color\",",
                      " *   \"choices\": [",
                      " *     {",
                      " *       \"value\": \"rgb(0, 128, 0)\",",
                      " *       \"description\": \"green\",",
                      " *       \"inStock\": true,",
                      " *       \"visible\": true",
                      " *     },",
                      " *     {",
                      " *       \"value\": \"rgb(255, 0, 0)\",",
                      " *       \"description\": \"red\",",
                      " *       \"inStock\": true,",
                      " *       \"visible\": true",
                      " *     }",
                      " *   ]",
                      " * }",
                      " */",
                      "" ],
                  "extra":
                    { "description": "This example gets a product's availability information using an option choice.\n The product contains more than one option, so no variant is selected and the\n product with the specified choices is not available for purchase." } },
                { "title": "Get a product's availability information",
                  "body":
                    [ "/*****************************",
                      " * backend code - stores.jsw *",
                      " *****************************/",
                      "",
                      "import wixStores from 'wix-stores-backend';",
                      "",
                      "export function myBackendFunction(productId, choices) {",
                      "  return wixStores.getProductOptionsAvailability(productId, choices);",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "import {myFunction} from 'backend/myModule';",
                      "",
                      "// ...",
                      "",
                      "let productId = // get product ID",
                      "let choices = {",
                      "  \"Size\": \"Large\",",
                      "  \"Color\": \"Red\"",
                      "};",
                      "",
                      "myBackendFunction(productId, choices)",
                      "  .then( (availability) => {",
                      "      let available = availability.availableForPurchase;  // true",
                      "      let options = availability.productOptions;          // see below",
                      "      let mainMedia = availability.mainMedia;",
                      "      let mediaItems = availability.mediaItems;",
                      "      let selectedVariant = availability.selectedVariant; // see below",
                      "  } )",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  } );",
                      "",
                      "/*",
                      " * options:",
                      " *",
                      " * \"Size\": {",
                      " *   \"optionType\": \"drop_down\",",
                      " *   \"name\": \"Size\",",
                      " *   \"choices\": [",
                      " *     {",
                      " *       \"value\": \"Small\",",
                      " *       \"description\": \"Small\",",
                      " *       \"inStock\": true,",
                      " *       \"visible\": true",
                      " *     },",
                      " *     {",
                      " *       \"value\": \"Large\",",
                      " *       \"description\": \"Large\",",
                      " *       \"inStock\": true,",
                      " *       \"visible\": true",
                      " *     }",
                      " *   ]",
                      " * },",
                      " * \"Color\":{",
                      " *   \"optionType\": \"color\",",
                      " *   \"name\": \"Color\",",
                      " *   \"choices\": [",
                      " *     {",
                      " *       \"value\": \"rgb(0, 128, 0)\",",
                      " *       \"description\": \"green\",",
                      " *       \"inStock\": true,",
                      " *       \"visible\": true",
                      " *     },",
                      " *     {",
                      " *       \"value\": \"rgb(255, 0, 0)\",",
                      " *       \"description\": \"red\",",
                      " *       \"inStock\": true,",
                      " *       \"visible\": true",
                      " *     }",
                      " *   ]",
                      " * }",
                      " *",
                      " *",
                      " * selectedVariant:",
                      " *",
                      " * \"selectedVariant\":{",
                      " *   \"sku\": \"366615376135191\",",
                      " *   \"currency\": \"USD\",",
                      " *   \"price\": 7.5,",
                      " *   \"discountedPrice\": 7.5,",
                      " *   \"formattedPrice\": \"$7.50\",",
                      " *   \"formattedDiscountedPrice\": \"$7.50\",",
                      " *   \"visible\": true,",
                      " *   \"inStock\": true,",
                      " *   \"weight\": 0",
                      " * }",
                      " */",
                      "" ],
                  "extra":
                    { "description": "This example gets a product's availability information using multiple option choices.\n Since all the product's options have a corresponding choice, a variant is selected." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Geo",
        "locations":
          [ { "filename": "carts.js",
              "lineno": 63 } ],
        "docs":
          { "summary": "An object representing a geographical location.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "countryCode",
              "type": "string",
              "doc": "Country code." },
            { "name": "subdivision",
              "type": "string",
              "doc": "Geographical subdivision such as a state or district." },
            { "name": "zipCode",
              "type": "string",
              "doc": "Zip code." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsAvailability",
        "locations":
          [ { "filename": "products.js",
              "lineno": 26 } ],
        "docs":
          { "summary": "An object returned by the `getProductOptionsAvailability()` function representing the availability of a product.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "availableForPurchase",
              "type": "boolean",
              "doc": "Whether the product with the specified option choices is available for purchase." },
            { "name": "productOptions",
              "type": "$w.ProductPage.StoreProductOptions",
              "doc": "An object representing all the available options for a store product." },
            { "name": "mainMedia",
              "type": "string",
              "doc": "Main product media item (image or video) URL." },
            { "name": "mediaItems",
              "type":
                [ { "name": "Array",
                    "typeParams":
                      [ "$w.Gallery.ImageItem" ] },
                  { "name": "Array",
                    "typeParams":
                      [ "$w.Gallery.VideoItem" ] } ],
              "doc": "List of product media items." },
            { "name": "selectedVariant",
              "type": "wix-stores-backend.ProductOptionsAvailabilitySelectedVariant",
              "doc": "The variant of the product selected using the specified option choices if there is one." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsAvailabilitySelectedVariant",
        "locations":
          [ { "filename": "products.js",
              "lineno": 36 } ],
        "docs":
          { "summary": "An object representing the product variant selected using the `getProductOptionsAvailability()` funtion.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)",
                "[ProductOptionsAvailability( )](#ProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sku",
              "type": "string",
              "doc": "Product variant stock keeping unit value." },
            { "name": "currency",
              "type": "string",
              "doc": "Product variant currency." },
            { "name": "price",
              "type": "number",
              "doc": "Product variant price." },
            { "name": "discountedPrice",
              "type": "number",
              "doc": "Discounted product variant price." },
            { "name": "formattedPrice",
              "type": "string",
              "doc": "Product variant price formatted with the currency." },
            { "name": "formattedDiscountedPrice",
              "type": "string",
              "doc": "Discounted product variant price formatted with the currency." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the product variant is shown in the store." },
            { "name": "inStock",
              "type": "boolean",
              "doc": "Whether the product variant is in stock." },
            { "name": "weight",
              "type": "number",
              "doc": "Product variant weight." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "StoreProductChoices",
        "locations":
          [ { "filename": "products.js",
              "lineno": 17 } ],
        "docs":
          { "summary": "An object representing the selection of specific choices from the product's options.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionKey",
              "type": "string",
              "doc": "Value of the option. This key name is\n dependent on the options added to the product. For example, if a product\n has a size option, this key value will be something like \"Size\" and its value\n will be something like \"Large\"." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }